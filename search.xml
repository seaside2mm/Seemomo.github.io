<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>读书清单</title>
      <link href="/2019/11/05/du-shu-qing-dan/"/>
      <url>/2019/11/05/du-shu-qing-dan/</url>
      
        <content type="html"><![CDATA[<h1 id="书籍推荐"><a href="#书籍推荐" class="headerlink" title="书籍推荐"></a>书籍推荐</h1><p><em>Android创新实验室(AI+移动互联) 整理制作</em></p><blockquote><p>声明：所有pdf资源均来自网络，不保证内容与书名匹配，请在阅读之前注意辨识。强烈建议阅读纸质版书籍。</p><p>本项目仅供学习交流使用，如有侵权，烦请告知以便删除。</p></blockquote><p><img src="./img/bookv2.jpg" alt="BOOK"></p><h2 id="数学-进阶"><a href="#数学-进阶" class="headerlink" title="数学(进阶)"></a>数学(进阶)</h2><ul><li><p>《概率论与数理统计》陈希孺 著<a href="https://pan.baidu.com/s/1eQpMh5C" target="_blank" rel="noopener">PDF</a></p></li><li><p>《矩阵分析与应用》张贤达<a href="https://vdisk.weibo.com/s/FlmEhSJru6BA-" target="_blank" rel="noopener">PDF</a></p></li><li><p>《普林斯顿微积分读本》<a href="https://u19794310.ctfile.com/fs/19794310-372441496" target="_blank" rel="noopener">PDF</a></p></li><li><p>《应用近世代数 第3版》胡冠章 著<a href="http://gen.lib.rus.ec/book/index.php?md5=1AAB5F8A6FA6C8E0F1FCC5EF57FEA27E" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Convex Optimization》by Stephen Boyd<a href="http://www.weiyoou8.com/share/19165079.html" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h2><ul><li><p><strong>C语言</strong></p></li><li><p>《C Primer Plus》(入门 )<a href="https://pan.baidu.com/s/1gdDBP9T" target="_blank" rel="noopener">PDF</a></p></li><li><p>《C和指针》经典<a href="https://pan.baidu.com/s/1hJPjo" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>C++</strong></p></li><li><p>《C++ Primer Plus》(适合无C语言基础入门)<a href="https://pan.baidu.com/s/1nv7J92L" target="_blank" rel="noopener">PDF</a></p></li><li><p>《C++ Primer》(提高)<a href="https://pan.baidu.com/s/1sk21Ahf" target="_blank" rel="noopener">PDF</a></p></li><li><p>《The C++ Programming Language》权威<a href="https://pan.baidu.com/s/12o2k" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Effective Modern C++》C++11/14<a href="https://pan.baidu.com/s/1ntLAe9b" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Modern C++ Tutorial C++ 11/14/17/20 On the Fly》高速上手C++11/14教程<a href="https://changkun.de/modern-cpp/pdf/modern-cpp-tutorial-zh-cn.pdf" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Exceptional C++：47个C++工程难题、编程问题和解决方案》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=161000060558&d=92343AD49EC75EE09FBD907665AB1873" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>Java</strong></p></li><li><p>《Head First Java》(入门)<a href="https://pan.baidu.com/s/1qX2ghe0#list/path=%2F" target="_blank" rel="noopener">PDF</a></p></li><li><p>《疯狂Java讲义》<a href="https://pan.baidu.com/s/12pR78" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Java编程思想》<a href="http://vdisk.weibo.com/s/uvlsIKkNoLEAy" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Java核心技术》<a href="https://pan.baidu.com/s/1o8CY6ro" target="_blank" rel="noopener">PDF1</a>、<a href="https://pan.baidu.com/share/link?shareid=3803014521&uk=4245516461" target="_blank" rel="noopener">PDF2</a></p></li><li><p>《Effective Java》第3版<a href="https://pan.baidu.com/s/12mCVX" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>Python</strong></p></li><li><p>《Python编程入门到实践[美]》(入门)<a href="https://pan.baidu.com/s/1pKCFlaz" target="_blank" rel="noopener">PDF</a></p></li><li><p>《流畅的Python》进阶<a href="https://pan.baidu.com/s/1i4ZtSWl" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="Android开发"><a href="#Android开发" class="headerlink" title="Android开发"></a>Android开发</h2><ul><li><p>《第一行代码Android》第2版(入门)<a href="https://pan.baidu.com/s/1hrXnSji" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Android编程权威指南》(提升)<a href="https://pan.baidu.com/s/1mgtPkko" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Android开发艺术探索》(进阶)<a href="https://pan.baidu.com/s/1o8iseiI" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Android源码设计模式解析与实战》<a href="https://pan.baidu.com/s/1nuHywnZ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Kotlin编程权威指南》</p></li><li><p>《Android群英传》<a href="https://pan.baidu.com/s/1c2uNF7U" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ul><li><p>《算法导论》第3版<a href="https://pan.baidu.com/s/1c0lJmPq" target="_blank" rel="noopener">PDF</a></p></li><li><p>《数据结构与算法分析》经典<a href="https://pan.baidu.com/share/link?shareid=2040099117&uk=2268417160&fid=4143774584" target="_blank" rel="noopener">PDF</a></p></li><li><p>《多维与度量数据结构基础[美]》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000008094272&d=0DF294181E398C1CE8E6017AC0BB2D39" target="_blank" rel="noopener">PDF</a></p></li><li><p>《算法》第4版（Java描述）<a href="http://vdisk.weibo.com/s/AcSJGKVz_XiVt" target="_blank" rel="noopener">PDF</a></p></li><li><p>《算法笔记》(胡凡，曾磊 编)<a href="https://pan.baidu.com/s/130HH-tWlXxU22HRQ8-lHhA" target="_blank" rel="noopener">PDF</a></p></li><li><p>《挑战程序设计竞赛》<a href="https://pan.baidu.com/s/1c2GeKik" target="_blank" rel="noopener">PDF</a></p></li><li><p>《算法竞赛入门经典》第2版<a href="https://pan.baidu.com/s/1c2w0cKC" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="计算机视觉"><a href="#计算机视觉" class="headerlink" title="计算机视觉"></a>计算机视觉</h2><ul><li><p>《数字图像处理》冈萨雷斯 著<a href="https://pan.baidu.com/s/10eGz6" target="_blank" rel="noopener">PDF</a></p></li><li><p>《计算机视觉——算法与应用》经典<a href="https://vdisk.weibo.com/s/AcSJGKVz_Xj0s" target="_blank" rel="noopener">PDF</a></p></li><li><p>《视觉机器学习20讲》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000015449959&d=2CE333758A3E452AD1455DFF31C7F259" target="_blank" rel="noopener">PDF</a></p></li><li><p>《视觉SLAM十四讲 从理论到实践》第2版</p></li><li><p>《图像处理、分析与机器视觉》第4版<a href="https://pan.baidu.com/s/10eGz6" target="_blank" rel="noopener">PDF</a></p></li><li><p>《计算机视觉模型、学习和推理》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016661170&d=603652CF34D1D8C13E5F7BCACCA4CFDB" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Multiple view geometry in computer vision》第2版<a href="https://vdisk.weibo.com/s/daQjrTsJChAzC" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>编程</strong></p></li><li><p>《Python计算机视觉编程》<a href="https://pan.baidu.com/s/1slUtBC5" target="_blank" rel="noopener">PDF</a></p></li><li><p>《学习OpenCV3》经典</p></li><li><p>《OpenCV3编程入门》(毛星云编)<a href="https://pan.baidu.com/s/1nvg4au9" target="_blank" rel="noopener">PDF</a></p></li><li><p>《OpenCV算法精解：基于Python与C++》</p></li><li><p>《OpenGL 超级宝典 第五版》<a href="https://pan.baidu.com/s/17R1Vb5hn8RGMngbGbhz_Hw" target="_blank" rel="noopener">PDF-EN</a>、<a href="https://pan.baidu.com/s/1O0louAI021S-OmJq03jf9Q" target="_blank" rel="noopener">PDF-CN</a></p></li><li><p>《OpenGL ES 3.0 编程指南》<a href="https://pan.baidu.com/s/1jCjn4uJfTeeyQsCSveux8Q" target="_blank" rel="noopener">PDF</a></p></li><li><p>《OpenGL ES 应用开发实践指南 Android 卷》<a href="https://pan.baidu.com/s/1270Db97XJOOuLz5F5022MQ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《The Book of Shaders》<a href="https://thebookofshaders.com/" target="_blank" rel="noopener">PDF</a></p></li></ul><h3 id="斯坦福大学公开课"><a href="#斯坦福大学公开课" class="headerlink" title="斯坦福大学公开课"></a>斯坦福大学公开课</h3><ul><li>Stanford CS231N</li><li>Stanford CS223B</li></ul><h2 id="机器学习、深度学习"><a href="#机器学习、深度学习" class="headerlink" title="机器学习、深度学习"></a>机器学习、深度学习</h2><ul><li><p>《机器学习》周志华 著<a href="https://pan.baidu.com/s/1KefCMHg8yfRWf4HkxZJvZw" target="_blank" rel="noopener">PDF</a></p></li><li><p>《统计学习方法 第二版》李航 著<a href="https://vdisk.weibo.com/s/sLX7IJK7Id7D" target="_blank" rel="noopener">PDF</a></p></li><li><p>《统计机器学习导论[日]》</p></li><li><p>《Deep Learning》(花书)<a href="https://pan.baidu.com/s/1jIkLkIM" target="_blank" rel="noopener">PDF</a></p></li><li><p>《图解机器学习[日]》<a href="https://pan.baidu.com/s/1kUCWXYB" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>编程</strong></p></li><li><p>《Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow》第二版(快速上手)<a href="http://gen.lib.rus.ec/book/index.php?md5=064323EFDE7FEF1A89B38E60F508E324" target="_blank" rel="noopener">PDF</a></p></li><li><p>《深度有趣》在线项目<a href="https://github.com/Honlan/DeepInterests" target="_blank" rel="noopener">PDF</a></p></li><li><p>《21个项目玩转深度学习：基于TensorFlow的实践讲解》<a href="http://vdisk.weibo.com/s/b643JsWsSRm51" target="_blank" rel="noopener">PDF</a></p></li><li><p>《TensorFlow：实战Google深度学习框架》</p></li></ul><h2 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h2><ul><li><p>《强化学习精要：核心算法与TensorFlow实现》<a href="">PDF</a></p></li><li><p>《Reinforcement Learning：An Introduction》第2版<a href="https://pan.baidu.com/s/134Pnt96xuzCKDtjeGH0vrQ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Algorithm for Reinforcement Learning》by Csaba Szepesvari<a href="https://vdisk.weibo.com/s/z0ugys1Iva5bM" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="计算机科学兴趣读物"><a href="#计算机科学兴趣读物" class="headerlink" title="计算机科学兴趣读物"></a>计算机科学兴趣读物</h2><ul><li><p>《数学之美》<a href="https://pan.baidu.com/s/1jGFY0rc" target="_blank" rel="noopener">PDF</a></p></li><li><p>《离散数学及其应用》<a href="https://pan.baidu.com/s/11D8P7" target="_blank" rel="noopener">PDF</a></p></li><li><p>《具体数学》<a href="https://u15169360.ctfile.com/fs/15169360-371634232" target="_blank" rel="noopener">PDF</a></p></li><li><p>《组合数学》<a href="https://pan.baidu.com/s/1wtZY" target="_blank" rel="noopener">PDF</a></p></li><li><p>《深入理解计算机系统》<a href="https://pan.baidu.com/s/12hlxZ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《一个64位操作系统的设计与实现》</p></li><li><p>《计算机科学导论》</p></li></ul><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><ul><li><p>《Spark快速大数据分析[美]》<a href="https://u15169360.ctfile.com/fs/15169360-371377135" target="_blank" rel="noopener">PDF</a></p></li><li><p>《MongoDB权威指南》第2版<a href="https://pan.baidu.com/s/1qWlDhbI" target="_blank" rel="noopener">PDF</a></p></li><li><p>《数据算法：Hadoop/Spark大数据处理技巧》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016213214&d=727B0D16DC1C0DE09BEC935AD4DD551F" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Hadoop权威指南：大数据的存储与分析》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016651684&d=8DF3F5F0A7B975F0F7AC6B3CBEB3026F" target="_blank" rel="noopener">PDF</a></p></li><li><p>《高性能MySQL》第3版<a href="https://pan.baidu.com/s/1o6jt2WE" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h2><ul><li><p>《数据挖掘导论》第2版<a href="http://home.ustc.edu.cn/~jw1992/book/introduction_to_DM.pdf" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Python数据分析与挖掘实战》<a href="https://vdisk.weibo.com/s/b643JsWsSRlWe" target="_blank" rel="noopener">PDF</a></p></li><li><p>《数据挖掘与预测分析》(R语言)<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016524217&d=8CE4E3CD71147B5314575AA8A9AB319C" target="_blank" rel="noopener">PDF</a></p></li></ul><blockquote><p>书很多，请不要把时间浪费在选择哪本书上。如果你选择困难，就按顺序读吧。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/hello-world/"/>
      <url>/2019/11/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>回首2019</title>
      <link href="/2019/11/04/2019-nian-zhong-zong-jie/"/>
      <url>/2019/11/04/2019-nian-zhong-zong-jie/</url>
      
        <content type="html"><![CDATA[<p>临近着年底，将2019的工作进行总结。</p><p>总的来说，今年还是做了不少工作，年初印尼开了头，在马来西亚也做了不少关于计算机专业必备知识素养的学习。</p><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>首先最重要的就是三个月有余的找工作过程。</p><p>我的过程还是挺艰辛的。一开始也走了不少冤枉路。前前后后也看了不少小大公司。</p><p>还是去了传统大型日企。</p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>挖的坑</p><p>CMU的《数据库》</p><p>《</p><p>暑假又开始对数学进一步学习。</p><p>《离散数学》</p><p>《近世数学》</p><p>《高等代数》</p><p>《矩阵分析》</p><p>《凸优化》</p><p>基本看完的书籍</p><p>《</p><h1 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h1><p>今年也是自己毕业之年。</p><p>的确深感自己研究能力的欠缺。对一个完整的研究</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/mask-rcnn-jian-ce-sprk/"/>
      <url>/2019/11/04/mask-rcnn-jian-ce-sprk/</url>
      
        <content type="html"><![CDATA[<p><a href="https://engineering.matterport.com/splash-of-color-instance-segmentation-with-mask-r-cnn-and-tensorflow-7c761e238b46" target="_blank" rel="noopener">balloon</a></p><p><a href="https://blog.csdn.net/heiheiya/article/details/81532914" target="_blank" rel="noopener">修改方法</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/matlab-for-mac/"/>
      <url>/2019/11/04/matlab-for-mac/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.macxin.com/archives/10739.html" target="_blank" rel="noopener">https://www.macxin.com/archives/10739.html</a></p><p><a href="https://matlabacademy.mathworks.com/cn" target="_blank" rel="noopener">官方教学视频</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/sprk-kong-zhi/"/>
      <url>/2019/11/04/sprk-kong-zhi/</url>
      
        <content type="html"><![CDATA[<p>我们总可以将各种场景转化为基本的sprk移动到某一个点的控制问题。<br>其中，有三个控制变量，移动速度，移动角度，移动时间。<br>为了达到较精确的控制，我们设定移动时间较短，每隔固定间隔0.5s发送一次控制指令，因此核心只有两个控制对象。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB 实现函数卷积演示动画</title>
      <link href="/2019/11/04/matlab-shi-xian-juan-ji-cao-zuo/"/>
      <url>/2019/11/04/matlab-shi-xian-juan-ji-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><h2 id="图解法求卷积"><a href="#图解法求卷积" class="headerlink" title="图解法求卷积"></a>图解法求卷积</h2><p>函数的卷积:<br>$$<br>f_1(t) * f_2(t) = \int _{-\infty}^{\infty} f_1(\tau)f_2(t-\tau) d\tau<br>$$</p><p>使用图解法，将卷积运算中一些抽象的关系形象化。具体有以下几个步骤：</p><ol><li>换元：将横坐标变元由 $t$ 变换为 $τ$：$f_1(t)→f_1(τ)，f_2(t)→f_2(τ)$</li><li>固定其中一个信号（如 $f_2(τ)$），对另一个信号关于纵轴反折：$f_1(τ)→f_1(−τ)$</li><li>位移：将反折后的信号做位移，位移量是 $f_1(-\tau) \to f_1(t-\tau)$。首先将 $f_1$ 左移到与 $f_2$不重合的位置</li><li>增大 t，将 $f_1$向右移动，使得 $f_1(t−τ)$和 $f_2(τ)$ 发生重叠，将两信号重叠的部分相乘：$f_1(t−τ)f_2(τ)$</li><li>积分：两个信号在该点重叠部分的面积$\int _{-\infty} ^{\infty}f_1(t-\tau)f_2(\tau) d\tau$ 即为 $f_1∗f_2$ 在点 t 处的函数值</li></ol><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>让我们首先定义一下我们要卷积的函数。假设我们有了两个函数$f_1(t) = u(t) - u(t-2), f_2(t) = u(t-1) - u(t-3)$, 要用图解法求 $f_1∗f_2$.</p><pre class=" language-matlab"><code class="language-matlab">syms t<span class="token punctuation">;</span>f1 <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span> <span class="token operator">*</span> t <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">heaviside</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">heaviside</span><span class="token punctuation">(</span>t <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">heaviside</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">heaviside</span><span class="token punctuation">(</span>t <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>d <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>t1 <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">:</span> d <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>t2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">:</span> d <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token function">convolution</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">,</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="img/000.jpg" alt=""></p><p>实现卷积函数</p><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">convolution</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">,</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> d<span class="token punctuation">)</span>    syms t tao<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">% 定义用于符号计算的变量</span>    figure<span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">% 在一个新的窗体上执行绘图</span>    grid on<span class="token punctuation">;</span>    hold on<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">% 因为要多用多次 plot 和 fplot，所以要打开 hold</span>    <span class="token comment" spellcheck="true">% 以下计算，可参照连续信号的卷积函数</span>    time_start <span class="token operator">=</span> <span class="token function">t1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">t2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment" spellcheck="true">% 计算卷积结果序列非 0 值的起始位置</span>    time_length <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">length</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">% 计算卷积结果序列非 0 值得宽度</span>    f <span class="token operator">=</span> time_start<span class="token punctuation">;</span>                          <span class="token comment" spellcheck="true">% 时域起始位置 from</span>    e <span class="token operator">=</span> time_start <span class="token operator">+</span> time_length <span class="token operator">*</span> d<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">% 时域终止位置 end</span>    ymin <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">;</span>    ymax <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    f11 <span class="token operator">=</span> <span class="token function">subs</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> t<span class="token punctuation">,</span> t <span class="token operator">-</span> tao<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">% 对 f1 进行换元、反折和位移：f1(t) => f1(tau) => f1(-tau) => f1(t-tau)</span>    <span class="token function">fplot</span><span class="token punctuation">(</span>f2<span class="token punctuation">,</span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span> e<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment" spellcheck="true">% f2 是固定的，可以先画到图上</span>    vec <span class="token operator">=</span> f <span class="token operator">:</span> d <span class="token operator">:</span> e<span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">% 生成卷积结果的时域向量</span>    p1 <span class="token operator">=</span> <span class="token function">fplot</span><span class="token punctuation">(</span>f2<span class="token punctuation">,</span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span> e<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">% 定义 p1 绘图句柄</span>    dt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     ft <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">% 循环绘图动画，对于卷积结果的时域向量中的每一个 t，都绘制一张该时刻的图</span>    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token function">length</span><span class="token punctuation">(</span>vec<span class="token punctuation">)</span>        f12 <span class="token operator">=</span> <span class="token function">subs</span><span class="token punctuation">(</span>f11<span class="token punctuation">,</span> <span class="token punctuation">{</span>t tao<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">% 令 t0 = vec(i)，此时 f12 = f1(t0-tau)，即位移量为 t0</span>        f13 <span class="token operator">=</span> f12 <span class="token operator">*</span> f2<span class="token punctuation">;</span>                         <span class="token comment" spellcheck="true">% 计算位移 t0 后的 f1 与 f2 的相乘结果</span>        <span class="token function">delete</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">% 先删除上一个 f12 的图像</span>        p1 <span class="token operator">=</span> <span class="token function">fplot</span><span class="token punctuation">(</span>f12<span class="token punctuation">,</span> <span class="token punctuation">[</span>f e<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">% 绘制新的 f12</span>        <span class="token function">axis</span><span class="token punctuation">(</span><span class="token punctuation">[</span>f<span class="token punctuation">,</span> e<span class="token punctuation">,</span> ymin<span class="token punctuation">,</span> ymax<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">set</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">'Color'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        f14 <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>f13<span class="token punctuation">,</span> f<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment" spellcheck="true">% 计算积分值，即为在 t 时刻的 f1*f2 值</span>        <span class="token comment" spellcheck="true">% 为了使得绘出的图像平滑，将当前的 (t, f14) 添加到数组（向量）中，然后调用 plot 就可以绘出光滑的曲线</span>        <span class="token comment" spellcheck="true">% 否则，只调用 plot(t, f14) 只能绘出散点图</span>        <span class="token comment" spellcheck="true">% 并且，填充曲线下方到 x 轴的区域。根据简单的几何知识，因为间隔 d 足够小，所以只要填充一个梯形即可</span>        <span class="token comment" spellcheck="true">% 设当前的 t 值为 v(i)，当前函数值为 f(i)，那么只要填充梯形 (v(i), f(i)), (v(i), 0), (v(i-1), 0), (v(i-1), f(i-1)) 即可</span>        p2 <span class="token operator">=</span> <span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">dt</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">dt</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">ft</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>ft<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> f14<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">set</span><span class="token punctuation">(</span>p2<span class="token punctuation">,</span> <span class="token string">'LineStyle'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dt <span class="token operator">=</span> <span class="token punctuation">[</span>dt <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        ft <span class="token operator">=</span> <span class="token punctuation">[</span>ft f14<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">plot</span><span class="token punctuation">(</span>dt<span class="token punctuation">,</span> ft<span class="token punctuation">,</span> <span class="token string">'-b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token comment" spellcheck="true">% 最后绘制图形</span>        <span class="token function">axis</span><span class="token punctuation">(</span><span class="token punctuation">[</span>f e ymin ymax<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">pause</span><span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token comment" spellcheck="true">% 短暂暂停，产生动画</span>    <span class="token keyword">end</span><span class="token keyword">end</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vlog</title>
      <link href="/2019/11/04/vlog/"/>
      <url>/2019/11/04/vlog/</url>
      
        <content type="html"><![CDATA[<h2 id="设备篇"><a href="#设备篇" class="headerlink" title="设备篇"></a>设备篇</h2><p><strong>大疆灵眸osmo Mobile 2手机稳定器</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博士愿景</title>
      <link href="/2019/11/04/bo-shi-yuan-jing/"/>
      <url>/2019/11/04/bo-shi-yuan-jing/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>1</th><th>54</th><th>Delft University of Technology</th><th>代尔夫特理工大学</th></tr></thead><tbody><tr><td>2</td><td>58</td><td>University of Amsterdam</td><td>阿姆斯特丹大学</td></tr><tr><td>3</td><td>104</td><td>Eindhoven University of Technology</td><td>埃因霍芬理工大学</td></tr><tr><td>4</td><td>109</td><td>Leiden University</td><td>莱顿大学</td></tr><tr><td>4</td><td>109</td><td>Utrecht University</td><td>乌得勒支大学</td></tr><tr><td>6</td><td>113</td><td>University of Groningen</td><td>格罗宁根大学</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>9</td><td>179</td><td>University of Twente</td><td>特温特大学</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>12</td><td>218</td><td>Vrije Universiteit Amsterdam</td><td>阿姆斯特丹自由大学<a href="https://www.vu.nl/en/research/taking-phd/application-admission-and-funding/application/index.aspx" target="_blank" rel="noopener">https://www.vu.nl/en/research/taking-phd/application-admission-and-funding/application/index.aspx</a></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="英国奥斯特大学"><a href="#英国奥斯特大学" class="headerlink" title="英国奥斯特大学"></a>英国奥斯特大学</h1><p>雅思6.5</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/you-xian-zhuang-tai-ji-fsm/"/>
      <url>/2019/11/04/you-xian-zhuang-tai-ji-fsm/</url>
      
        <content type="html"><![CDATA[<p>有限状态机（英语：finite-state machine，缩写：FSM）又称有限状态自动机，简称状态机，是表示有限个状态（<strong>State</strong>）以及在这些状态之间的转移（<strong>Transition</strong>）和动作（<strong>Action</strong>）等行为的数学模型。</p><p>状态机有三个特征：</p><ol><li>状态（<strong>State</strong>）总数是有限的。</li><li>在任一时刻，只处于一种状态。</li><li>在某种条件（<strong>Event</strong>）下，会从某种状态转移（<strong>Transition</strong>）到另一种状态，同时执行某个动作（<strong>Action</strong>）。</li></ol><p>从有限状态机的定义和特征我们可以看到它的几个重要概念：</p><ul><li>状态（<strong>State</strong>）：包括初始状态和事件触发后的状态，同时必须要有一个最终状态。</li><li>事件（<strong>Event</strong>）：触发状态机从一种状态切换到另一种状态。</li><li>转移（<strong>Transition</strong>）：状态切换路径，包含Event(触发该转移的事件)，Source(源状态），Target(目的状态)。</li><li>动作（<strong>Action</strong>）：表示在进行状态转移后要执行的具体行为。</li></ul><p>由于有限状态机的这些特征，我们可以把状态转移的过程做成类似这样的状态转移表。</p><table><thead><tr><th align="left">条件\当前状态</th><th align="left">状态A</th><th align="left">状态B</th><th align="left">状态C</th><th align="left">状态D</th></tr></thead><tbody><tr><td align="left">条件X</td><td align="left">状态B</td><td align="left">状态C</td><td align="left">状态D</td><td align="left">…</td></tr><tr><td align="left">条件Y</td><td align="left">状态C</td><td align="left">状态D</td><td align="left">…</td><td align="left">…</td></tr><tr><td align="left">条件Z</td><td align="left">…</td><td align="left">状态A</td><td align="left">状态A</td><td align="left">状态A</td></tr></tbody></table><p>可以归纳为一个公式。<br><strong>Old State + Event = New State</strong></p><p>把上面的状态转移表用公式表达就是<br>状态A + 条件X = 状态B<br>状态A + 条件Y = 状态C<br>…</p><h1 id="有限状态机例子"><a href="#有限状态机例子" class="headerlink" title="有限状态机例子"></a>有限状态机例子</h1><p>我们小时候都应该玩过贪吃蛇这个游戏，游戏规则不必再说，我们看看使用有限状态机来实现这个游戏。</p><p>状态转移表：</p><table><thead><tr><th align="left">条件\当前状态</th><th align="left">GAME_OVER</th><th align="left">UP</th><th align="left">DOWN</th><th align="left">LEFT</th><th align="left">RIGHT</th></tr></thead><tbody><tr><td align="left">EAT</td><td align="left">…</td><td align="left">UP</td><td align="left">DOWN</td><td align="left">LEFT</td><td align="left">RIGHT</td></tr><tr><td align="left">HIT</td><td align="left">…</td><td align="left">GAME_OVER</td><td align="left">GAME_OVER</td><td align="left">GAME_OVER</td><td align="left">GAME_OVER</td></tr><tr><td align="left">TURN_UP</td><td align="left">UP</td><td align="left">…</td><td align="left">…</td><td align="left">UP</td><td align="left">UP</td></tr><tr><td align="left">TURN_DOWN</td><td align="left">DOWN</td><td align="left">…</td><td align="left">…</td><td align="left">DOWN</td><td align="left">DOWN</td></tr><tr><td align="left">TURN_LEFT</td><td align="left">LEFT</td><td align="left">LEFT</td><td align="left">LEFT</td><td align="left">…</td><td align="left">…</td></tr><tr><td align="left">TURN_RIGHT</td><td align="left">RIGHT</td><td align="left">RIGHT</td><td align="left">RIGHT</td><td align="left">…</td><td align="left">…</td></tr></tbody></table><p>EAT：吃掉食物<br>HIT：撞墙或自己<br>TURN_UP：向上转向事件<br>…<br>GAME_OVER： 为了简便一点，我们让它既是开始又是结束的状态，当按下上下左右任一键时开始游戏。<br>UP: 向上前进状态，此时可以吃掉食物，也可以撞到墙或自己，同时可以向左向右转向，但按下向上或向下是不会触发任何动作。<br>…</p><p>当我们把状态转移表定义好之后就会发现这个游戏剩下的部分非常好写，而且逻辑非常清楚，这就是有限状态机的好处。</p><p><a href="https://blog.csdn.net/uyghfjhh/article/details/19651225" target="_blank" rel="noopener">c++实现</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>结婚进行时</title>
      <link href="/2019/11/04/jie-hun-jin-xing-shi/"/>
      <url>/2019/11/04/jie-hun-jin-xing-shi/</url>
      
        <content type="html"><![CDATA[<p>成都婚纱租赁</p><p><a href="https://zhuanlan.zhihu.com/p/22505208" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/22505208</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/shu-mei-pai-shang-shou/"/>
      <url>/2019/11/04/shu-mei-pai-shang-shou/</url>
      
        <content type="html"><![CDATA[<h1 id="VNC方式连接"><a href="#VNC方式连接" class="headerlink" title="VNC方式连接"></a>VNC方式连接</h1><p>树莓派VNC服务器</p><pre class=" language-shell"><code class="language-shell">sudo apt-get updatesudo apt-get upgradesudo apt-get install tightvncservertightvncserver#开启服务器vncserver :1#获得IP Address.hostname -I</code></pre><p>Mac vnc连接</p><pre class=" language-shell"><code class="language-shell">#Finder  -> go -> connect to servervnc://ip:5901 #netstat -nlt 确定端口是否被占用</code></pre><h1 id="ssh方式连接"><a href="#ssh方式连接" class="headerlink" title="ssh方式连接"></a>ssh方式连接</h1><p>树莓派配置中开启ssh连接。</p><pre class=" language-shell"><code class="language-shell">ssh pi@ip#密码默认raspberry</code></pre><ul><li>使用openni2</li></ul><p><a href="https://github.com/occipital/OpenNI2/" target="_blank" rel="noopener">https://github.com/occipital/OpenNI2/</a></p><p>To make it compile i changed the CFLAGS in:<br><code>OpenNI2/ThirdParty/PSCommon/BuildSystem/Platform.Arm</code></p><pre><code>CFLAGS += -mtune=arm1176jzf-s -mfpu=vfp -mfloat-abi=hard</code></pre><p>and had to disable neon:</p><pre><code>#DEFINES += XN_NEON</code></pre><p>编译成功后，将所需要so动态库放到<code>\usr\local\lib</code>, 通过cmake导入。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2019/10/15/hexo-bo-ke-da-jian/"/>
      <url>/2019/10/15/hexo-bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<p>本来自己已经有一个jekyll博客了，但是偶然看见<a href="https://www.hahack.com/" target="_blank" rel="noopener">这个大佬</a>的笔记wiki，就简直看到了自己想要的。加之其配色代码风格，与自己心目中相符，断然决定另起炉灶，放弃<a href="https://seaside2mm.github.io/">这个</a>陪伴几个月的博客，就让它消失在岁月尘光中。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>Prepare</li></ul><p>下载nvm，node。注意环境变量。</p><ul><li>Hexo</li></ul><p>安装Hexo，见<a href="https://hexo.io/docs/index.html" target="_blank" rel="noopener">官网</a>. </p><blockquote><p>⚠️这个问题</p><p>Mac / Linux</p><p>If you encounter <code>EACCES</code> permission error when trying to install Hexo, please follow <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">the workaround</a> provided by npmjs; overriding with root/sudo is highly discouraged.</p></blockquote><p>一些github和hexo初始化<a href="https://www.jianshu.com/p/cb0750324e26" target="_blank" rel="noopener">操作</a>。</p><pre class=" language-shell"><code class="language-shell">hexo inithexo install hexo g -d hexo s</code></pre><h1 id="Freemind主题"><a href="#Freemind主题" class="headerlink" title="Freemind主题"></a>Freemind主题</h1><p><a href="https://www.hahack.com/codes/hexo-theme-freemind/" target="_blank" rel="noopener">freemind插件以及配置</a></p><ul><li>一些留意问题</li></ul><h1 id="wixo主题"><a href="#wixo主题" class="headerlink" title="wixo主题"></a>wixo主题</h1><p>为了增加wiki的layout，着实花了一番功夫。</p><p>最后其实很简单搞定。</p><ol><li>新建wiki页面</li></ol><p><code>hexo new page wiki</code></p><p>然后你会发现source里面多了个目录about，里面有个index.md。其实你也可以手动建立。页面的格式和文章一样。接着把链接加上,在主题下的<code>_config.yml</code>里面的menu一项，添加wiki</p><ol start="2"><li>复制wixo中的相关代码</li></ol><p><a href="https://github.com/wzpan/hexo-theme-wixo/blob/3d3eeff9dd00f9c589a5da515d70c891bf6ca4fc/layout/_partial/index.ejs" target="_blank" rel="noopener">项目的index代码</a>复制到freemind的layout，改名为wiki。</p><ol start="3"><li>文章在wiki页面显示方式</li></ol><p>原wixo项目所有文章都会显示。为了避免，参考<a href="http://perthcharles.github.io/2015/01/17/how-to-hack-hexo/" target="_blank" rel="noopener">这篇</a>，在wiki.ejs中15行，37行分布添加</p><pre class=" language-ejs"><code class="language-ejs"><% if(cat.name.substring(0, 5) == 'wiki-') { %><% } %></code></pre><h1 id="matery"><a href="#matery" class="headerlink" title="matery"></a>matery</h1><p><a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-19" target="_blank" rel="noopener">主题属性</a></p><p>颜值即是正义。</p><ul><li>插件</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save <span class="token function">npm</span> i -S hexo-prism-plugin<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span class="token function">npm</span> i hexo-permalink-pinyin --save<span class="token function">npm</span> i --save hexo-wordcount<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><p><a href="https://bestzuo.cn/posts/blog-establish.html" target="_blank" rel="noopener">https://bestzuo.cn/posts/blog-establish.html</a></p><p>增加网址logo</p><p>增加阅读人数</p><h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><ul><li><p>新建文章</p><p>hexo new post <title></p></li><li><p>设置文章摘要</p></li></ul><pre><code>以上是文章摘要&lt;!--more--&gt;以下是余下全文</code></pre><p><a href="https://myyerrol.io/zh-cn/2017/03/31/hexo_tutorial_1_installation_and_configuration/" target="_blank" rel="noopener">https://myyerrol.io/zh-cn/2017/03/31/hexo_tutorial_1_installation_and_configuration/</a></p><h1 id="遇见的一些问题"><a href="#遇见的一些问题" class="headerlink" title="遇见的一些问题"></a>遇见的一些问题</h1><ul><li>部署后没有样式</li></ul><p>修改config文件，设置url即可</p><pre class=" language-md"><code class="language-md">url: [https://XXX.github.io/XXX.github.io/](https://xxx.github.io/XXX.github.io/)root: /XXX.github.io/permalink: :year/:month/:day/:title/permalink_defaults:</code></pre><ul><li>博客分类标签layout没有内容</li></ul><p><code>hexo new page xxx</code>  </p><p>创建layout页面, categories，tags等。source文件夹下生成index文件。</p><p>需要额外添加，如下：</p><pre class=" language-md"><code class="language-md">title: tagsdate: 2019-11-02 15:42:36type: "tags" layout: "tags"</code></pre><h1 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h1><p><a href="https://pengloo53.gitbooks.io/hexo/content/" target="_blank" rel="noopener">https://pengloo53.gitbooks.io/hexo/content/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用谷歌API训练自己检测器</title>
      <link href="/2019/07/03/2019-07-2-shi-yong-gu-ge-api-xun-lian-zi-ji-jian-ce-qi/"/>
      <url>/2019/07/03/2019-07-2-shi-yong-gu-ge-api-xun-lian-zi-ji-jian-ce-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="使用谷歌API训练自己检测器"><a href="#使用谷歌API训练自己检测器" class="headerlink" title="使用谷歌API训练自己检测器"></a>使用谷歌API训练自己检测器</h1><h1 id="0-快速开始"><a href="#0-快速开始" class="headerlink" title="0. 快速开始"></a>0. 快速开始</h1><p>Setup:</p><ul><li><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md" target="_blank" rel="noopener">Installation</a></li></ul><p>Quick Start:</p><ul><li><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/object_detection_tutorial.ipynb" target="_blank" rel="noopener">Quick Start: Jupyter notebook for off-the-shelf inference</a></li><li><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_pets.md" target="_blank" rel="noopener">Quick Start: Training a pet detector</a></li></ul><p>推荐文件夹格式：</p><p>annotations — 标注xml文件</p><p>data — 转化后tf record文件</p><p>images — 原数据集</p><p>training  — 训练模型以及配置文件</p><h1 id="1-制作图像数据集"><a href="#1-制作图像数据集" class="headerlink" title="1. 制作图像数据集"></a>1. 制作图像数据集</h1><h2 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h2><p> <a href="https://images.google.com/" target="_blank" rel="noopener">Google Images</a> and <a href="https://pixabay.com/" target="_blank" rel="noopener">Pixabay</a> </p><ul><li><p>jpeg or png</p></li><li><p>bounding boxes (<code>xmin, ymin, xmax, ymax</code>) </p></li></ul><h2 id="数据标注工具"><a href="#数据标注工具" class="headerlink" title="数据标注工具"></a>数据标注工具</h2><p>几种格式：PASCAL VOC format， COCO</p><ul><li><p><a href="http://www.robots.ox.ac.uk/~vgg/software/via/" target="_blank" rel="noopener">VIA (VGG Image Annotator)</a></p><blockquote><p>because of its simplicity. It’s a single HTML file that you download and open in a browser. </p></blockquote></li><li><p><a href="https://github.com/tzutalin/labelImg" target="_blank" rel="noopener">LabelImg</a></p><blockquote><p>saved as XML files in the PASCAL VOC format </p></blockquote></li></ul><p><a href="https://gist.github.com/seaside2mm/5b3ee02404f46601f43ff012f679d7bb" target="_blank" rel="noopener">XML 转换 CSV格式</a></p><ul><li><a href="https://github.com/christopher5106/FastAnnotationTool" target="_blank" rel="noopener">FIAT (Fast Image Data Annotation Tool)</a></li></ul><h2 id="csv数据集划分"><a href="#csv数据集划分" class="headerlink" title="csv数据集划分"></a>csv数据集划分</h2><p><a href="https://gist.github.com/seaside2mm/8cd6c846936a441489bc310d69b1d42a" target="_blank" rel="noopener">划分训练和测试</a></p><h2 id="TFRecord数据格式"><a href="#TFRecord数据格式" class="headerlink" title="TFRecord数据格式"></a>TFRecord数据格式</h2><p>生成方法：</p><p> <a href="http://host.robots.ox.ac.uk/pascal/VOC/" target="_blank" rel="noopener">PASCAL VOC dataset</a> </p><p><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/dataset_tools/create_pascal_tf_record.py" target="_blank" rel="noopener">create_pascal_tf_record.py</a></p><p>图像格式转换</p><p> <a href="http://imagemagick.org/#" target="_blank" rel="noopener">ImageMagick</a></p><h1 id="2-训练模型"><a href="#2-训练模型" class="headerlink" title="2. 训练模型"></a>2. 训练模型</h1><p>利用 <a href="https://research.googleblog.com/2017/06/supercharge-your-computer-vision-models.html" target="_blank" rel="noopener">TensorFlow’s new Object Detector API</a>进行模型训练。</p><h2 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h2><ul><li><p>选择具体NN模型更改 <a href="https://github.com/tensorflow/models/tree/master/research/object_detection/samples/configs" target="_blank" rel="noopener">config files</a></p><p><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/configuring_jobs.md" target="_blank" rel="noopener">object detection training pipeline</a>. </p></li></ul><pre><code>tf_record_input_reader {  input_path: &quot;/usr/home/username/data/train.record&quot;}label_map_path: &quot;/usr/home/username/data/label_map.pbtxt&quot;</code></pre><ul><li><p>label map</p><p><a href="https://github.com/tensorflow/models/tree/master/research/object_detection/data" target="_blank" rel="noopener">选择相对应label map</a>. 比如，只有一个label时：</p></li></ul><pre><code>item {  id: 1  name: &#39;person&#39;}</code></pre><h2 id="Pre-trained-model-checkpoint"><a href="#Pre-trained-model-checkpoint" class="headerlink" title="Pre-trained model checkpoint"></a>Pre-trained model checkpoint</h2><p>选择已经训练好的模型进行模型迁移，减少计算量。可选择项。 <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md" target="_blank" rel="noopener">several model checkpoint</a> </p><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><ul><li>Training can be either done <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_locally.md" target="_blank" rel="noopener">locally</a> or on the <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_on_cloud.md" target="_blank" rel="noopener">cloud</a> (AWS, Google Cloud etc.). If you have GPU (at least more than 2 GB) at home then you can do it locally otherwise I would recommend to go with the cloud. In my case, I went with <a href="http://cloud.google.com/" target="_blank" rel="noopener">Google Cloud</a> this time and essentially followed all the steps described in <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_on_cloud.md" target="_blank" rel="noopener">their documentation</a>.</li><li>For Google Cloud, you need to define a YAML configuration file. A <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/samples/cloud/cloud.yml" target="_blank" rel="noopener">sample file is also provided</a> and I basically just took the default values.</li><li>It is also recommended during the training to start the evaluation job. You can then monitor the process of the training and evaluation jobs by running <a href="https://www.tensorflow.org/get_started/summaries_and_tensorboard" target="_blank" rel="noopener">Tensorboard</a> on your local machine.</li></ul><h1 id="3-导出模型"><a href="#3-导出模型" class="headerlink" title="3. 导出模型"></a>3. 导出模型</h1><p>copy the model checkpoints from the Google Cloud bucket to my local machine and then used the <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/exporting_models.md" target="_blank" rel="noopener">provided script</a> to export the model.</p><p>After export, you should see the directory ${EXPORT_DIR} containing the following:</p><ul><li>saved_model/, a directory containing the saved model format of the exported model</li><li>frozen_inference_graph.pb, the frozen graph format of the exported model</li><li>model.ckpt.*, the model checkpoints used for exporting</li><li>checkpoint, a file specifying to restore included checkpoint files</li><li>pipeline.config, pipeline config file for the exported model</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/tensorflow/models/tree/master/research/object_detection" target="_blank" rel="noopener">https://github.com/tensorflow/models/tree/master/research/object_detection</a></p><p><a href="https://towardsdatascience.com/how-to-train-your-own-object-detector-with-tensorflows-object-detector-api-bec72ecfe1d9" target="_blank" rel="noopener">https://towardsdatascience.com/how-to-train-your-own-object-detector-with-tensorflows-object-detector-api-bec72ecfe1d9</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV与基础数字图像处理系列1-Mat基础</title>
      <link href="/2019/05/12/tu-xiang-zhi-liang-ping-gu-qing-xi-du-jian-ce/"/>
      <url>/2019/05/12/tu-xiang-zhi-liang-ping-gu-qing-xi-du-jian-ce/</url>
      
        <content type="html"><![CDATA[<p><a href="http://shartoo.github.io/image-quality-assessment/" target="_blank" rel="noopener">http://shartoo.github.io/image-quality-assessment/</a></p>]]></content>
      
      
      <categories>
          
          <category> OpenCV </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机科学自学指南</title>
      <link href="/2017/10/01/ji-suan-ji-ke-xue-zi-xue-zhi-nan/"/>
      <url>/2017/10/01/ji-suan-ji-ke-xue-zi-xue-zhi-nan/</url>
      
        <content type="html"><![CDATA[<p><a href="http://cslearner.cn/" target="_blank" rel="noopener">路线参考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
