<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【统计】python的正态分布再认识</title>
      <link href="/2020/04/29/2020/python-de-zheng-tai-fen-bu-zai-ren-shi/"/>
      <url>/2020/04/29/2020/python-de-zheng-tai-fen-bu-zai-ren-shi/</url>
      
        <content type="html"><![CDATA[<p>原文来源：<a href="https://qiita.com/kenmatsu4/items/74b8a9f696507af410a4" target="_blank" rel="noopener">https://qiita.com/kenmatsu4/items/74b8a9f696507af410a4</a></p><hr><p>在统计学中，正态分布起着非常重要的作用。 表示正态分布（密度函数）的公式为<br>$$<br>{\Phi(x) = \frac{1}{\sqrt{2\pi\sigma^2}}\exp \left( -\frac{(x-\mu)^2}{2\sigma^2} \right)<br>}<br>$$<br>但这是一个非常复杂的公式……当方差$σ^2=1$，均值$μ=0$的标准正态分布时，看起来就简单多了。</p><p>$$<br>{\phi(x) = \frac{1}{\sqrt{2\pi}}\exp \left( -\frac{x^2}{2} \right)<br>}<br>$$<br><a href="https://gist.github.com/seaside2mm/143dd229620781b0d29f88df714985d6" target="_blank" rel="noopener">python</a>作图则是如下钟型：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geahrz6gafj30ag0743yh.jpg" alt=""></p><p>正态分布是平滑的、对称的。正态分布是用一个函数来表示连续概率，可以直观表现聚集在一点上的概率。<br>于是，用<a href="https://gist.github.com/seaside2mm/0f6a94221e5f18f43dbecf69c1aa3e12" target="_blank" rel="noopener">python</a>看看二次函数的图像，<br>$$<br>{f(x) = -x^2<br>}<br>$$<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geahzen1iaj30af074t8m.jpg" alt=""></p><p>越来越像了。 把它放在e的上面，做成一个钟的形状,<a href="https://gist.github.com/seaside2mm/6da6c795c4f66979de6d862ff9b85234" target="_blank" rel="noopener">python</a>表示。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geai4gqx1hj30aa06zt8m.jpg" alt=""></p><p>形状已经完全是正态分布。 这个正态分布的原始形式是$e^{-x^2}$。</p><p>此后，为了便于计算微分时的计算，$x$是$1/\sqrt{2}$。 换句话说，转换变量为$y = \sqrt{2}x$。<br>$$<br>{g(y) = \exp \left(-\frac{y^2}{2} \right)<br>}<br>$$<br><a href="https://gist.github.com/seaside2mm/40dc4123d5f365cf253082603ba97e08" target="_blank" rel="noopener">对比图</a>如下</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geai92qy7ij30aa06zdfx.jpg" alt=""></p><p>它稍微向旁边扩散了一下。</p><p>为了让这个$f(x)$的面积为1(因为它是一个概率，所以所有可能发生的事件加起来都是100%)，我们需要把积分成1。</p><p>由<a href="[https://zh.wikipedia.org/wiki/%E9%AB%98%E6%96%AF%E7%A7%AF%E5%88%86](https://zh.wikipedia.org/wiki/高斯积分)">高斯积分（见维基百科）</a>可知，$x$的整个范围内的积分值为<br>$$<br>{\int_{-\infty}^{\infty} e^{-x^2}dx = \sqrt{\pi}<br>}<br>$$<br>所以，带入上面转换变量，<br>$$<br>{\int_{-\infty}^{\infty} \exp \left( {-\frac{y^2}{2}}\right)dy = \sqrt{2\pi}<br>}<br>$$<br>两边除以$2π$,<br>$$<br>{\int_{-\infty}^{\infty} \frac{1}{\sqrt{2\pi}} \exp \left( {-\frac{y^2}{2}}\right)dy = １<br>}<br>$$<br>我们得到了标准正态分布的公式:blush:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npx <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>y1 <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>y2 <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>y3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1.1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"exp(-x^2)"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">,</span><span class="token string">"g"</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"exp(-(x^2)/2"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y3<span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"normal"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geaih8vzbhj30gh0a3mxl.jpg" alt=""></p><p>这个公式是在$e^{-x^2}$的基础上，经过调整，如果把它积分面积就会是1。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 统计 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【统计】python的中心极限定理再认识</title>
      <link href="/2020/04/29/2020/python-de-zhong-xin-ji-xian-ding-li-zai-ren-shi/"/>
      <url>/2020/04/29/2020/python-de-zhong-xin-ji-xian-ding-li-zai-ren-shi/</url>
      
        <content type="html"><![CDATA[<p>原文来源：<a href="https://qiita.com/kenmatsu4/items/351284ef430bcfd2c8ed" target="_blank" rel="noopener">https://qiita.com/kenmatsu4/items/351284ef430bcfd2c8ed</a></p><hr><h1 id="1-中心極限定理"><a href="#1-中心極限定理" class="headerlink" title="1.中心極限定理"></a>1.中心極限定理</h1><p>如果你研究统计学，你一定会看到一个比较生硬的名字–中心极限定理。</p><p>根据维基百科的说法。</p><blockquote><p><strong>中心极限定理</strong>是<a href="https://zh.m.wikipedia.org/wiki/概率论" target="_blank" rel="noopener">概率论</a>中的一组定理。中心极限定理说明，在适当的条件下，大量相互独立<a href="https://zh.m.wikipedia.org/wiki/随机变量" target="_blank" rel="noopener">随机变量</a>的均值经适当标准化后<a href="https://zh.m.wikipedia.org/wiki/依分布收敛" target="_blank" rel="noopener">依分布收敛</a>于<a href="https://zh.m.wikipedia.org/wiki/正态分布" target="_blank" rel="noopener">正态分布</a>。这组定理是<a href="https://zh.m.wikipedia.org/wiki/数理统计学" target="_blank" rel="noopener">数理统计学</a>和误差分析的理论基础，指出了大量随机变量之和近似服从正态分布的条件。</p></blockquote><p>但我不太明白……<br>无论原始分布是什么，从它中抽取的样本均值都会接近正态分布。 样本方差也将接近于正态分布。 (准确地说，如果根据卡方分布，如果N大，可以用正态分布来近似)。</p><p>我想即使我们用语言解释，或者用公式证明（乘积率参数函数匹配之类的东西），也无法直观的理解它，所以本文的目的是想通过作图来尝试理解它。</p><p>更多理论内容，<a href="[https://zh.m.wikipedia.org/zh-hans/%E4%B8%AD%E5%BF%83%E6%9E%81%E9%99%90%E5%AE%9A%E7%90%86](https://zh.m.wikipedia.org/zh-hans/中心极限定理)">参考wiki</a></p><h1 id="2-准备作图"><a href="#2-准备作图" class="headerlink" title="2. 准备作图"></a>2. 准备作图</h1><p>我们将用Python编写一个图形，准备过程如下。<br>本节提供了导入各种库和绘制图形的功能。</p><pre class=" language-python"><code class="language-python"><span class="token operator">%</span>matplotlib inline<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> numpy<span class="token punctuation">.</span>random <span class="token keyword">as</span> rd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>mlab <span class="token keyword">as</span> mlab<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">as</span> st<span class="token comment" spellcheck="true"># 参数</span>n <span class="token operator">=</span> <span class="token number">10000</span>sample_size <span class="token operator">=</span> <span class="token number">10000</span><span class="token comment" spellcheck="true"># 计算样本均值方差的函数</span><span class="token keyword">def</span> <span class="token function">sample_to_mean_var</span><span class="token punctuation">(</span>sample<span class="token punctuation">)</span><span class="token punctuation">:</span>    mean <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>sample<span class="token punctuation">)</span>    var  <span class="token operator">=</span> np<span class="token punctuation">.</span>var<span class="token punctuation">(</span>sample<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>mean<span class="token punctuation">,</span> var<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 画图</span><span class="token keyword">def</span> <span class="token function">plot_mean_var</span><span class="token punctuation">(</span>stats<span class="token punctuation">,</span> dist_name<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    mu <span class="token operator">=</span> stats<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>    var <span class="token operator">=</span> stats<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>    bins <span class="token operator">=</span> <span class="token number">40</span>    <span class="token comment" spellcheck="true"># 均值图</span>    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>mu<span class="token punctuation">,</span> bins<span class="token operator">=</span>bins<span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"plum"</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"mu from %s distribution"</span><span class="token operator">%</span><span class="token punctuation">(</span>dist_name<span class="token punctuation">)</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 方差图</span>    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>var<span class="token punctuation">,</span> bins<span class="token operator">=</span>bins<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"lightblue"</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"var from %s distribution"</span><span class="token operator">%</span><span class="token punctuation">(</span>dist_name<span class="token punctuation">)</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">plot_dist</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> bins<span class="token punctuation">,</span> title <span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>data<span class="token punctuation">,</span> bins<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"lightgreen"</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h1 id="3-绘图"><a href="#3-绘图" class="headerlink" title="3. 绘图"></a>3. 绘图</h1><h2 id="指数分布"><a href="#指数分布" class="headerlink" title="指数分布"></a>指数分布</h2><p>首先，让我们尝试一下指数分布。 下图是参数λ为0.1、10000个样本的指数分布图。 它是一个完全不对称的分布，右边是长长的下摆。</p><pre class=" language-python"><code class="language-python">lam <span class="token operator">=</span> <span class="token number">0.1</span>  x <span class="token operator">=</span> rd<span class="token punctuation">.</span>exponential<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token operator">/</span>lam<span class="token punctuation">,</span> size<span class="token operator">=</span>sample_size<span class="token punctuation">)</span>plot_dist<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">"exponential dist"</span><span class="token punctuation">)</span></code></pre><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geajan90yej30c208vq2t.jpg" alt="下载"></p><p>以这组10000个样本为一组，由这里计算出样本均值和样本方差。 在重复10,000次后，写出样本平均数和样本方差的直方图，我们得到如下结果.</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 由指数分布生成的样本</span>lam <span class="token operator">=</span> <span class="token number">0.1</span>stats <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>sample_to_mean_var<span class="token punctuation">(</span>rd<span class="token punctuation">.</span>exponential<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token operator">/</span>lam<span class="token punctuation">,</span> size<span class="token operator">=</span>sample_size<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plot_mean_var<span class="token punctuation">(</span>stats<span class="token punctuation">,</span> dist_name<span class="token operator">=</span><span class="token string">"exponential"</span><span class="token punctuation">)</span></code></pre><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geaj6caq75j30c208ydfo.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geajemi01mj30c608yq2u.jpg" alt=""></p><p>我不知道，原来的分布相当偏斜，但样本均值和样本方差似乎是一个美丽的对称钟形。 中心极限定理是，样本均值和方差遵循正态分布。</p><p>下面，我也用其他的分布图来试试。</p><h2 id="卡方分布"><a href="#卡方分布" class="headerlink" title="卡方分布"></a>卡方分布</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 自由度5</span>df <span class="token operator">=</span> <span class="token number">5</span>x <span class="token operator">=</span> rd<span class="token punctuation">.</span>chisquare<span class="token punctuation">(</span>df<span class="token punctuation">,</span> sample_size<span class="token punctuation">)</span>plot_dist<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">"chi square dist"</span><span class="token punctuation">)</span></code></pre><p><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F50670%2F50d746b4-8b89-b199-9047-70910576c877.png?ixlib=rb-1.2.2&auto=format&gif-q=60&q=75&w=1400&fit=max&s=db9f98cc504dedb6c8c638fef702d8a9" alt=""></p><pre class=" language-python"><code class="language-python">df <span class="token operator">=</span> <span class="token number">5</span>   <span class="token comment" spellcheck="true"># 自由度</span>chi_stats <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>sample_to_mean_var<span class="token punctuation">(</span>rd<span class="token punctuation">.</span>chisquare<span class="token punctuation">(</span>df<span class="token punctuation">,</span> sample_size<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plot_mean_var<span class="token punctuation">(</span>chi_stats<span class="token punctuation">,</span> dist_name<span class="token operator">=</span><span class="token string">"chi square"</span><span class="token punctuation">)</span></code></pre><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geajic7kz8j30by08y0sk.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geajid5tu4j30c108yt8j.jpg" alt=""></p><h2 id="双峰正态分布"><a href="#双峰正态分布" class="headerlink" title="双峰正态分布"></a>双峰正态分布</h2><p>我也会尝试一下奇形怪状的分布，比如两座山。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 双峰正規分布</span><span class="token keyword">def</span> <span class="token function">generate_bimodal_norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> sample_size<span class="token punctuation">)</span>    y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> sample_size<span class="token punctuation">)</span>    <span class="token keyword">return</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>z <span class="token operator">=</span> generate_bimodal_norm<span class="token punctuation">(</span><span class="token punctuation">)</span>plot_dist<span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token string">"bi-modal normal dist"</span><span class="token punctuation">)</span></code></pre><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geajk2bpkrj30c308y0sk.jpg" alt=""></p><pre class=" language-python"><code class="language-python">binorm_stats <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>sample_to_mean_var<span class="token punctuation">(</span>generate_bimodal_norm<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plot_mean_var<span class="token punctuation">(</span>binorm_stats<span class="token punctuation">,</span> dist_name<span class="token operator">=</span><span class="token string">"bi-modal normal"</span><span class="token punctuation">)</span></code></pre><p>即使是这样的分布，样本均值或样本方差也是正态分布。 すごい，中心极限定理。</p><p>＃4.结论<br>于是，我试着通过看图来直观地理解中心极限定理，虽然看公式和证明，似乎很难。 这也是正态分布在统计学中如此重要的原因:smile:</p>]]></content>
      
      
      
        <tags>
            
            <tag> 统计 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【统计】python直观化正态分布与卡方分布的关系</title>
      <link href="/2020/04/29/2020/python-zhi-guan-hua-zheng-tai-fen-bu-yu-qia-fang-fen-bu-de-guan-xi/"/>
      <url>/2020/04/29/2020/python-zhi-guan-hua-zheng-tai-fen-bu-yu-qia-fang-fen-bu-de-guan-xi/</url>
      
        <content type="html"><![CDATA[<p>原文来源：<a href="https://qiita.com/kenmatsu4/items/b6318d66fcfe78b84d83" target="_blank" rel="noopener">https://qiita.com/kenmatsu4/items/b6318d66fcfe78b84d83</a></p><hr><p>这是统计学可视化系列的第三弹。</p><h2 id="卡方分布嘛回事"><a href="#卡方分布嘛回事" class="headerlink" title="卡方分布嘛回事"></a>卡方分布嘛回事</h2><p>在AB检验中经常使用的是卡方分布（<strong>chi-square distribution</strong>），如卡方检验。 如果把它画成图，它的样子如下，形状根据k的值变化，叫做自由度。</p><p>k个独立的标准正态分布变量的平方和服从自由度为k的卡方分布。卡方分布是一种特殊的伽玛分布，是统计推断中应用最为广泛的概率分布之一，例如假设检验和置信区间的计算。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geajte56bkg30hs0ao0uv.gif" alt=""></p><p><a href="https://gist.github.com/seaside2mm/48db46fcc6133bf6cc8d7884221153eb" target="_blank" rel="noopener">绘图代码</a></p><p>若k个随机变量${\displaystyle Z_{1}}、……、{\displaystyle Z_{k}}$是相互独立，符合标准正态分布的随机变量（数学期望为0、方差为1），则随机变量$Z$的平方和<br>$$<br>Z = \sum_{i = 1}^k X_i^2<br>$$<br>被称为服从<a href="https://zh.wikipedia.org/wiki/自由度_(统计学)" target="_blank" rel="noopener">自由度</a>为 <em>k</em> 的<strong>卡方分布</strong>.</p><hr><p>嗯，那是什么意思？ 在对正态分布的密度函数进行正态分布的平方？ 显然不是。</p><p>首先，既然我们说的是 “独立地遵循标准正态分布的k个随机变量”，那么我就试着写出一个遵循标准正态分布的随机数的直方图，30000 个服从$X∼ N(μ,σ)$的样本。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geak3egh5mj30bx08ywed.jpg" alt=""></p><p><a href="https://gist.github.com/seaside2mm/ac1ea9b345ef748fc366a44c139d3aea" target="_blank" rel="noopener">作图代码</a>参考第二弹，中心极限定理。</p><pre class=" language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">)</span>plot_dist<span class="token punctuation">(</span>x<span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"normal distribution."</span><span class="token punctuation">)</span></code></pre><h2 id="自由度1"><a href="#自由度1" class="headerlink" title="自由度1"></a>自由度1</h2><p>根据这个随机数的分布，用这个随机数的平方来绘制的随机数的分布，就是 chi-square分布。 在代码中。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">import</span> chi2x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">)</span>x2 <span class="token operator">=</span> x<span class="token operator">**</span><span class="token number">2</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"chi2 distribution.[k=1]"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"lightgreen"</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 自由度1的卡方分布</span>xx <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">25</span> <span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>xx<span class="token punctuation">,</span> chi2<span class="token punctuation">.</span>pdf<span class="token punctuation">(</span>xx<span class="token punctuation">,</span> df<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"r"</span><span class="token punctuation">)</span></code></pre><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geak9wlzogj30f00c1web.jpg" alt=""></p><p>如果你查看此图，你会看到以下内容:<br>因为平方，x为正数，所以所有的东西都向右移动，而不是$x=0$，并且<br>既然是平方的。</p><ul><li>$x&lt;1$，其中x小于1，被推到左边，向0倾斜。</li><li>$x≥1$，其中大于1的地方向右延伸，向$∞$侧靠拢这</li></ul><p>同时，我在画出1个自由度为1的chi-square分布的密度函数的线，基本一致!<br>因为只有一个$x$，所以我们有一个自由度为1的chi-square分布。</p><h2 id="更多自由度"><a href="#更多自由度" class="headerlink" title="更多自由度"></a>更多自由度</h2><p>从2个变量为<br>$$<br>X_1^2 + X_2^2<br>$$<br>到10个变量<br>$$<br>\sum_{i = 1}^{10} X_i^2<br>$$<br>你可以看到下面的动画模拟</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geakgteq29g30g00cg75h.gif" alt=""></p><p>bravo! </p><p>我想，”平方”chi-square可以理解为对一个遵循标准正态分布的随机数进行平方化！</p><p>代码如下。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> animation <span class="token keyword">as</span> ani<span class="token keyword">def</span> <span class="token function">animate</span><span class="token punctuation">(</span>nframe<span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> <span class="token number">30000</span>    k <span class="token operator">=</span> nframe <span class="token operator">+</span> <span class="token number">1</span>    cum <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>        x2 <span class="token operator">=</span> x<span class="token operator">**</span><span class="token number">2</span>        cum <span class="token operator">+=</span> x2     plt<span class="token punctuation">.</span>clf<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#plt.figure(figsize=(9,7))</span>    plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"chi2 histgram &amp; pdf [k=%d]"</span><span class="token operator">%</span>k<span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>cum<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"lightgreen"</span><span class="token punctuation">,</span> normed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 自由度1</span>    xx <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">25</span> <span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>xx<span class="token punctuation">,</span> chi2<span class="token punctuation">.</span>pdf<span class="token punctuation">(</span>xx<span class="token punctuation">,</span> df<span class="token operator">=</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"r"</span><span class="token punctuation">)</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>anim <span class="token operator">=</span> ani<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> animate<span class="token punctuation">,</span> frames<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> blit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>anim<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'chi2_hist_dist.gif'</span><span class="token punctuation">,</span> writer<span class="token operator">=</span><span class="token string">'imagemagick'</span><span class="token punctuation">,</span> fps<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span></code></pre><ul><li>代码补编</li></ul><p>我们使用imagemagick来绘制GIF动画，请参考<a href="http://www.imagemagick.org/script/binary-releases.php" target="_blank" rel="noopener">HP</a>と<a href="http://www.imagemagick.org/download/python/" target="_blank" rel="noopener">PythonMagick</a>来安装。</p><p>不过，根据你的环境不同，ImageMagick和PythonMagick的安装并不容易，所以如果你只是想轻松制作一个动画，可以不需要额外的mp4动画库就可以制作一个动画，如下图所示。</p><pre class=" language-python"><code class="language-python">anim<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'filename.mp4'</span><span class="token punctuation">,</span> fps<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 统计 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书清单</title>
      <link href="/2019/11/05/2019/du-shu-qing-dan/"/>
      <url>/2019/11/05/2019/du-shu-qing-dan/</url>
      
        <content type="html"><![CDATA[<h1 id="书籍推荐"><a href="#书籍推荐" class="headerlink" title="书籍推荐"></a>书籍推荐</h1><p><em>Android创新实验室(AI+移动互联) 整理制作</em></p><blockquote><p>声明：所有pdf资源均来自网络，不保证内容与书名匹配，请在阅读之前注意辨识。强烈建议阅读纸质版书籍。</p><p>本项目仅供学习交流使用，如有侵权，烦请告知以便删除。</p></blockquote><p><img src="./img/bookv2.jpg" alt="BOOK"></p><h2 id="数学-进阶"><a href="#数学-进阶" class="headerlink" title="数学(进阶)"></a>数学(进阶)</h2><ul><li><p>《概率论与数理统计》陈希孺 著<a href="https://pan.baidu.com/s/1eQpMh5C" target="_blank" rel="noopener">PDF</a></p></li><li><p>《矩阵分析与应用》张贤达<a href="https://vdisk.weibo.com/s/FlmEhSJru6BA-" target="_blank" rel="noopener">PDF</a></p></li><li><p>《普林斯顿微积分读本》<a href="https://u19794310.ctfile.com/fs/19794310-372441496" target="_blank" rel="noopener">PDF</a></p></li><li><p>《应用近世代数 第3版》胡冠章 著<a href="http://gen.lib.rus.ec/book/index.php?md5=1AAB5F8A6FA6C8E0F1FCC5EF57FEA27E" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Convex Optimization》by Stephen Boyd<a href="http://www.weiyoou8.com/share/19165079.html" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h2><ul><li><p><strong>C语言</strong></p></li><li><p>《C Primer Plus》(入门 )<a href="https://pan.baidu.com/s/1gdDBP9T" target="_blank" rel="noopener">PDF</a></p></li><li><p>《C和指针》经典<a href="https://pan.baidu.com/s/1hJPjo" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>C++</strong></p></li><li><p>《C++ Primer Plus》(适合无C语言基础入门)<a href="https://pan.baidu.com/s/1nv7J92L" target="_blank" rel="noopener">PDF</a></p></li><li><p>《C++ Primer》(提高)<a href="https://pan.baidu.com/s/1sk21Ahf" target="_blank" rel="noopener">PDF</a></p></li><li><p>《The C++ Programming Language》权威<a href="https://pan.baidu.com/s/12o2k" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Effective Modern C++》C++11/14<a href="https://pan.baidu.com/s/1ntLAe9b" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Modern C++ Tutorial C++ 11/14/17/20 On the Fly》高速上手C++11/14教程<a href="https://changkun.de/modern-cpp/pdf/modern-cpp-tutorial-zh-cn.pdf" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Exceptional C++：47个C++工程难题、编程问题和解决方案》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=161000060558&d=92343AD49EC75EE09FBD907665AB1873" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>Java</strong></p></li><li><p>《Head First Java》(入门)<a href="https://pan.baidu.com/s/1qX2ghe0#list/path=%2F" target="_blank" rel="noopener">PDF</a></p></li><li><p>《疯狂Java讲义》<a href="https://pan.baidu.com/s/12pR78" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Java编程思想》<a href="http://vdisk.weibo.com/s/uvlsIKkNoLEAy" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Java核心技术》<a href="https://pan.baidu.com/s/1o8CY6ro" target="_blank" rel="noopener">PDF1</a>、<a href="https://pan.baidu.com/share/link?shareid=3803014521&uk=4245516461" target="_blank" rel="noopener">PDF2</a></p></li><li><p>《Effective Java》第3版<a href="https://pan.baidu.com/s/12mCVX" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>Python</strong></p></li><li><p>《Python编程入门到实践[美]》(入门)<a href="https://pan.baidu.com/s/1pKCFlaz" target="_blank" rel="noopener">PDF</a></p></li><li><p>《流畅的Python》进阶<a href="https://pan.baidu.com/s/1i4ZtSWl" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="Android开发"><a href="#Android开发" class="headerlink" title="Android开发"></a>Android开发</h2><ul><li><p>《第一行代码Android》第2版(入门)<a href="https://pan.baidu.com/s/1hrXnSji" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Android编程权威指南》(提升)<a href="https://pan.baidu.com/s/1mgtPkko" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Android开发艺术探索》(进阶)<a href="https://pan.baidu.com/s/1o8iseiI" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Android源码设计模式解析与实战》<a href="https://pan.baidu.com/s/1nuHywnZ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Kotlin编程权威指南》</p></li><li><p>《Android群英传》<a href="https://pan.baidu.com/s/1c2uNF7U" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ul><li><p>《算法导论》第3版<a href="https://pan.baidu.com/s/1c0lJmPq" target="_blank" rel="noopener">PDF</a></p></li><li><p>《数据结构与算法分析》经典<a href="https://pan.baidu.com/share/link?shareid=2040099117&uk=2268417160&fid=4143774584" target="_blank" rel="noopener">PDF</a></p></li><li><p>《多维与度量数据结构基础[美]》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000008094272&d=0DF294181E398C1CE8E6017AC0BB2D39" target="_blank" rel="noopener">PDF</a></p></li><li><p>《算法》第4版（Java描述）<a href="http://vdisk.weibo.com/s/AcSJGKVz_XiVt" target="_blank" rel="noopener">PDF</a></p></li><li><p>《算法笔记》(胡凡，曾磊 编)<a href="https://pan.baidu.com/s/130HH-tWlXxU22HRQ8-lHhA" target="_blank" rel="noopener">PDF</a></p></li><li><p>《挑战程序设计竞赛》<a href="https://pan.baidu.com/s/1c2GeKik" target="_blank" rel="noopener">PDF</a></p></li><li><p>《算法竞赛入门经典》第2版<a href="https://pan.baidu.com/s/1c2w0cKC" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="计算机视觉"><a href="#计算机视觉" class="headerlink" title="计算机视觉"></a>计算机视觉</h2><ul><li><p>《数字图像处理》冈萨雷斯 著<a href="https://pan.baidu.com/s/10eGz6" target="_blank" rel="noopener">PDF</a></p></li><li><p>《计算机视觉——算法与应用》经典<a href="https://vdisk.weibo.com/s/AcSJGKVz_Xj0s" target="_blank" rel="noopener">PDF</a></p></li><li><p>《视觉机器学习20讲》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000015449959&d=2CE333758A3E452AD1455DFF31C7F259" target="_blank" rel="noopener">PDF</a></p></li><li><p>《视觉SLAM十四讲 从理论到实践》第2版</p></li><li><p>《图像处理、分析与机器视觉》第4版<a href="https://pan.baidu.com/s/10eGz6" target="_blank" rel="noopener">PDF</a></p></li><li><p>《计算机视觉模型、学习和推理》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016661170&d=603652CF34D1D8C13E5F7BCACCA4CFDB" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Multiple view geometry in computer vision》第2版<a href="https://vdisk.weibo.com/s/daQjrTsJChAzC" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>编程</strong></p></li><li><p>《Python计算机视觉编程》<a href="https://pan.baidu.com/s/1slUtBC5" target="_blank" rel="noopener">PDF</a></p></li><li><p>《学习OpenCV3》经典</p></li><li><p>《OpenCV3编程入门》(毛星云编)<a href="https://pan.baidu.com/s/1nvg4au9" target="_blank" rel="noopener">PDF</a></p></li><li><p>《OpenCV算法精解：基于Python与C++》</p></li><li><p>《OpenGL 超级宝典 第五版》<a href="https://pan.baidu.com/s/17R1Vb5hn8RGMngbGbhz_Hw" target="_blank" rel="noopener">PDF-EN</a>、<a href="https://pan.baidu.com/s/1O0louAI021S-OmJq03jf9Q" target="_blank" rel="noopener">PDF-CN</a></p></li><li><p>《OpenGL ES 3.0 编程指南》<a href="https://pan.baidu.com/s/1jCjn4uJfTeeyQsCSveux8Q" target="_blank" rel="noopener">PDF</a></p></li><li><p>《OpenGL ES 应用开发实践指南 Android 卷》<a href="https://pan.baidu.com/s/1270Db97XJOOuLz5F5022MQ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《The Book of Shaders》<a href="https://thebookofshaders.com/" target="_blank" rel="noopener">PDF</a></p></li></ul><h3 id="斯坦福大学公开课"><a href="#斯坦福大学公开课" class="headerlink" title="斯坦福大学公开课"></a>斯坦福大学公开课</h3><ul><li>Stanford CS231N</li><li>Stanford CS223B</li></ul><h2 id="机器学习、深度学习"><a href="#机器学习、深度学习" class="headerlink" title="机器学习、深度学习"></a>机器学习、深度学习</h2><ul><li><p>《机器学习》周志华 著<a href="https://pan.baidu.com/s/1KefCMHg8yfRWf4HkxZJvZw" target="_blank" rel="noopener">PDF</a></p></li><li><p>《统计学习方法 第二版》李航 著<a href="https://vdisk.weibo.com/s/sLX7IJK7Id7D" target="_blank" rel="noopener">PDF</a></p></li><li><p>《统计机器学习导论[日]》</p></li><li><p>《Deep Learning》(花书)<a href="https://pan.baidu.com/s/1jIkLkIM" target="_blank" rel="noopener">PDF</a></p></li><li><p>《图解机器学习[日]》<a href="https://pan.baidu.com/s/1kUCWXYB" target="_blank" rel="noopener">PDF</a></p></li><li><p><strong>编程</strong></p></li><li><p>《Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow》第二版(快速上手)<a href="http://gen.lib.rus.ec/book/index.php?md5=064323EFDE7FEF1A89B38E60F508E324" target="_blank" rel="noopener">PDF</a></p></li><li><p>《深度有趣》在线项目<a href="https://github.com/Honlan/DeepInterests" target="_blank" rel="noopener">PDF</a></p></li><li><p>《21个项目玩转深度学习：基于TensorFlow的实践讲解》<a href="http://vdisk.weibo.com/s/b643JsWsSRm51" target="_blank" rel="noopener">PDF</a></p></li><li><p>《TensorFlow：实战Google深度学习框架》</p></li></ul><h2 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h2><ul><li><p>《强化学习精要：核心算法与TensorFlow实现》<a href="">PDF</a></p></li><li><p>《Reinforcement Learning：An Introduction》第2版<a href="https://pan.baidu.com/s/134Pnt96xuzCKDtjeGH0vrQ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Algorithm for Reinforcement Learning》by Csaba Szepesvari<a href="https://vdisk.weibo.com/s/z0ugys1Iva5bM" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="计算机科学兴趣读物"><a href="#计算机科学兴趣读物" class="headerlink" title="计算机科学兴趣读物"></a>计算机科学兴趣读物</h2><ul><li><p>《数学之美》<a href="https://pan.baidu.com/s/1jGFY0rc" target="_blank" rel="noopener">PDF</a></p></li><li><p>《离散数学及其应用》<a href="https://pan.baidu.com/s/11D8P7" target="_blank" rel="noopener">PDF</a></p></li><li><p>《具体数学》<a href="https://u15169360.ctfile.com/fs/15169360-371634232" target="_blank" rel="noopener">PDF</a></p></li><li><p>《组合数学》<a href="https://pan.baidu.com/s/1wtZY" target="_blank" rel="noopener">PDF</a></p></li><li><p>《深入理解计算机系统》<a href="https://pan.baidu.com/s/12hlxZ" target="_blank" rel="noopener">PDF</a></p></li><li><p>《一个64位操作系统的设计与实现》</p></li><li><p>《计算机科学导论》</p></li></ul><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><ul><li><p>《Spark快速大数据分析[美]》<a href="https://u15169360.ctfile.com/fs/15169360-371377135" target="_blank" rel="noopener">PDF</a></p></li><li><p>《MongoDB权威指南》第2版<a href="https://pan.baidu.com/s/1qWlDhbI" target="_blank" rel="noopener">PDF</a></p></li><li><p>《数据算法：Hadoop/Spark大数据处理技巧》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016213214&d=727B0D16DC1C0DE09BEC935AD4DD551F" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Hadoop权威指南：大数据的存储与分析》<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016651684&d=8DF3F5F0A7B975F0F7AC6B3CBEB3026F" target="_blank" rel="noopener">PDF</a></p></li><li><p>《高性能MySQL》第3版<a href="https://pan.baidu.com/s/1o6jt2WE" target="_blank" rel="noopener">PDF</a></p></li></ul><h2 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h2><ul><li><p>《数据挖掘导论》第2版<a href="http://home.ustc.edu.cn/~jw1992/book/introduction_to_DM.pdf" target="_blank" rel="noopener">PDF</a></p></li><li><p>《Python数据分析与挖掘实战》<a href="https://vdisk.weibo.com/s/b643JsWsSRlWe" target="_blank" rel="noopener">PDF</a></p></li><li><p>《数据挖掘与预测分析》(R语言)<a href="http://book.ucdrs.superlib.net/views/specific/2929/bookDetail.jsp?dxNumber=000016524217&d=8CE4E3CD71147B5314575AA8A9AB319C" target="_blank" rel="noopener">PDF</a></p></li></ul><blockquote><p>书很多，请不要把时间浪费在选择哪本书上。如果你选择困难，就按顺序读吧。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回首2019</title>
      <link href="/2019/11/04/2019/2019-nian-zhong-zong-jie/"/>
      <url>/2019/11/04/2019/2019-nian-zhong-zong-jie/</url>
      
        <content type="html"><![CDATA[<p>临近着年底，将2019的工作进行总结。</p><p>总的来说，今年还是做了不少工作，年初印尼开了头，在马来西亚也做了不少关于计算机专业必备知识素养的学习。</p><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>首先最重要的就是三个月有余的找工作过程。</p><p>我的过程还是挺艰辛的。一开始也走了不少冤枉路。前前后后也看了不少小大公司。</p><p>还是去了传统大型日企。</p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>挖的坑</p><p>CMU的《数据库》</p><p>《</p><p>暑假又开始对数学进一步学习。</p><p>《离散数学》</p><p>《近世数学》</p><p>《高等代数》</p><p>《矩阵分析》</p><p>《凸优化》</p><p>基本看完的书籍</p><p>《</p><h1 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h1><p>今年也是自己毕业之年。</p><p>的确深感自己研究能力的欠缺。对一个完整的研究</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB 实现函数卷积演示动画</title>
      <link href="/2019/11/04/2019/matlab-shi-xian-juan-ji-cao-zuo/"/>
      <url>/2019/11/04/2019/matlab-shi-xian-juan-ji-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><h2 id="图解法求卷积"><a href="#图解法求卷积" class="headerlink" title="图解法求卷积"></a>图解法求卷积</h2><p>函数的卷积:<br>$$<br>f_1(t) * f_2(t) = \int _{-\infty}^{\infty} f_1(\tau)f_2(t-\tau) d\tau<br>$$</p><p>使用图解法，将卷积运算中一些抽象的关系形象化。具体有以下几个步骤：</p><ol><li>换元：将横坐标变元由 $t$ 变换为 $τ$：$f_1(t)→f_1(τ)，f_2(t)→f_2(τ)$</li><li>固定其中一个信号（如 $f_2(τ)$），对另一个信号关于纵轴反折：$f_1(τ)→f_1(−τ)$</li><li>位移：将反折后的信号做位移，位移量是 $f_1(-\tau) \to f_1(t-\tau)$。首先将 $f_1$ 左移到与 $f_2$不重合的位置</li><li>增大 t，将 $f_1$向右移动，使得 $f_1(t−τ)$和 $f_2(τ)$ 发生重叠，将两信号重叠的部分相乘：$f_1(t−τ)f_2(τ)$</li><li>积分：两个信号在该点重叠部分的面积$\int _{-\infty} ^{\infty}f_1(t-\tau)f_2(\tau) d\tau$ 即为 $f_1∗f_2$ 在点 t 处的函数值</li></ol><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>让我们首先定义一下我们要卷积的函数。假设我们有了两个函数$f_1(t) = u(t) - u(t-2), f_2(t) = u(t-1) - u(t-3)$, 要用图解法求 $f_1∗f_2$.</p><pre class=" language-matlab"><code class="language-matlab">syms t<span class="token punctuation">;</span>f1 <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span> <span class="token operator">*</span> t <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">heaviside</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">heaviside</span><span class="token punctuation">(</span>t <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">heaviside</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">heaviside</span><span class="token punctuation">(</span>t <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>d <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>t1 <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">:</span> d <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>t2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">:</span> d <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token function">convolution</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">,</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="img/000.jpg" alt=""></p><p>实现卷积函数</p><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">convolution</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">,</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> d<span class="token punctuation">)</span>    syms t tao<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">% 定义用于符号计算的变量</span>    figure<span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">% 在一个新的窗体上执行绘图</span>    grid on<span class="token punctuation">;</span>    hold on<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">% 因为要多用多次 plot 和 fplot，所以要打开 hold</span>    <span class="token comment" spellcheck="true">% 以下计算，可参照连续信号的卷积函数</span>    time_start <span class="token operator">=</span> <span class="token function">t1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">t2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment" spellcheck="true">% 计算卷积结果序列非 0 值的起始位置</span>    time_length <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">length</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">% 计算卷积结果序列非 0 值得宽度</span>    f <span class="token operator">=</span> time_start<span class="token punctuation">;</span>                          <span class="token comment" spellcheck="true">% 时域起始位置 from</span>    e <span class="token operator">=</span> time_start <span class="token operator">+</span> time_length <span class="token operator">*</span> d<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">% 时域终止位置 end</span>    ymin <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">;</span>    ymax <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    f11 <span class="token operator">=</span> <span class="token function">subs</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> t<span class="token punctuation">,</span> t <span class="token operator">-</span> tao<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">% 对 f1 进行换元、反折和位移：f1(t) => f1(tau) => f1(-tau) => f1(t-tau)</span>    <span class="token function">fplot</span><span class="token punctuation">(</span>f2<span class="token punctuation">,</span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span> e<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment" spellcheck="true">% f2 是固定的，可以先画到图上</span>    vec <span class="token operator">=</span> f <span class="token operator">:</span> d <span class="token operator">:</span> e<span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">% 生成卷积结果的时域向量</span>    p1 <span class="token operator">=</span> <span class="token function">fplot</span><span class="token punctuation">(</span>f2<span class="token punctuation">,</span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span> e<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">% 定义 p1 绘图句柄</span>    dt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     ft <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">% 循环绘图动画，对于卷积结果的时域向量中的每一个 t，都绘制一张该时刻的图</span>    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token function">length</span><span class="token punctuation">(</span>vec<span class="token punctuation">)</span>        f12 <span class="token operator">=</span> <span class="token function">subs</span><span class="token punctuation">(</span>f11<span class="token punctuation">,</span> <span class="token punctuation">{</span>t tao<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">% 令 t0 = vec(i)，此时 f12 = f1(t0-tau)，即位移量为 t0</span>        f13 <span class="token operator">=</span> f12 <span class="token operator">*</span> f2<span class="token punctuation">;</span>                         <span class="token comment" spellcheck="true">% 计算位移 t0 后的 f1 与 f2 的相乘结果</span>        <span class="token function">delete</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">% 先删除上一个 f12 的图像</span>        p1 <span class="token operator">=</span> <span class="token function">fplot</span><span class="token punctuation">(</span>f12<span class="token punctuation">,</span> <span class="token punctuation">[</span>f e<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">% 绘制新的 f12</span>        <span class="token function">axis</span><span class="token punctuation">(</span><span class="token punctuation">[</span>f<span class="token punctuation">,</span> e<span class="token punctuation">,</span> ymin<span class="token punctuation">,</span> ymax<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">set</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">'Color'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        f14 <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>f13<span class="token punctuation">,</span> f<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment" spellcheck="true">% 计算积分值，即为在 t 时刻的 f1*f2 值</span>        <span class="token comment" spellcheck="true">% 为了使得绘出的图像平滑，将当前的 (t, f14) 添加到数组（向量）中，然后调用 plot 就可以绘出光滑的曲线</span>        <span class="token comment" spellcheck="true">% 否则，只调用 plot(t, f14) 只能绘出散点图</span>        <span class="token comment" spellcheck="true">% 并且，填充曲线下方到 x 轴的区域。根据简单的几何知识，因为间隔 d 足够小，所以只要填充一个梯形即可</span>        <span class="token comment" spellcheck="true">% 设当前的 t 值为 v(i)，当前函数值为 f(i)，那么只要填充梯形 (v(i), f(i)), (v(i), 0), (v(i-1), 0), (v(i-1), f(i-1)) 即可</span>        p2 <span class="token operator">=</span> <span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">dt</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">dt</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">ft</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>ft<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> f14<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">set</span><span class="token punctuation">(</span>p2<span class="token punctuation">,</span> <span class="token string">'LineStyle'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dt <span class="token operator">=</span> <span class="token punctuation">[</span>dt <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        ft <span class="token operator">=</span> <span class="token punctuation">[</span>ft f14<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">plot</span><span class="token punctuation">(</span>dt<span class="token punctuation">,</span> ft<span class="token punctuation">,</span> <span class="token string">'-b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token comment" spellcheck="true">% 最后绘制图形</span>        <span class="token function">axis</span><span class="token punctuation">(</span><span class="token punctuation">[</span>f e ymin ymax<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">pause</span><span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token comment" spellcheck="true">% 短暂暂停，产生动画</span>    <span class="token keyword">end</span><span class="token keyword">end</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2019/博士愿景</title>
      <link href="/2019/11/04/2019/bo-shi-yuan-jing/"/>
      <url>/2019/11/04/2019/bo-shi-yuan-jing/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>1</th><th>54</th><th>Delft University of Technology</th><th>代尔夫特理工大学</th></tr></thead><tbody><tr><td>2</td><td>58</td><td>University of Amsterdam</td><td>阿姆斯特丹大学</td></tr><tr><td>3</td><td>104</td><td>Eindhoven University of Technology</td><td>埃因霍芬理工大学</td></tr><tr><td>4</td><td>109</td><td>Leiden University</td><td>莱顿大学</td></tr><tr><td>4</td><td>109</td><td>Utrecht University</td><td>乌得勒支大学</td></tr><tr><td>6</td><td>113</td><td>University of Groningen</td><td>格罗宁根大学</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>9</td><td>179</td><td>University of Twente</td><td>特温特大学</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>12</td><td>218</td><td>Vrije Universiteit Amsterdam</td><td>阿姆斯特丹自由大学<a href="https://www.vu.nl/en/research/taking-phd/application-admission-and-funding/application/index.aspx" target="_blank" rel="noopener">https://www.vu.nl/en/research/taking-phd/application-admission-and-funding/application/index.aspx</a></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="英国奥斯特大学"><a href="#英国奥斯特大学" class="headerlink" title="英国奥斯特大学"></a>英国奥斯特大学</h1><p>雅思6.5</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/2019/shu-mei-pai-shang-shou/"/>
      <url>/2019/11/04/2019/shu-mei-pai-shang-shou/</url>
      
        <content type="html"><![CDATA[<h1 id="VNC方式连接"><a href="#VNC方式连接" class="headerlink" title="VNC方式连接"></a>VNC方式连接</h1><p>树莓派VNC服务器</p><pre class=" language-shell"><code class="language-shell">sudo apt-get updatesudo apt-get upgradesudo apt-get install tightvncservertightvncserver#开启服务器vncserver :1#获得IP Address.hostname -I</code></pre><p>Mac vnc连接</p><pre class=" language-shell"><code class="language-shell">#Finder  -> go -> connect to servervnc://ip:5901 #netstat -nlt 确定端口是否被占用</code></pre><h1 id="ssh方式连接"><a href="#ssh方式连接" class="headerlink" title="ssh方式连接"></a>ssh方式连接</h1><p>树莓派配置中开启ssh连接。</p><pre class=" language-shell"><code class="language-shell">ssh pi@ip#密码默认raspberry</code></pre><ul><li>使用openni2</li></ul><p><a href="https://github.com/occipital/OpenNI2/" target="_blank" rel="noopener">https://github.com/occipital/OpenNI2/</a></p><p>To make it compile i changed the CFLAGS in:<br><code>OpenNI2/ThirdParty/PSCommon/BuildSystem/Platform.Arm</code></p><pre><code>CFLAGS += -mtune=arm1176jzf-s -mfpu=vfp -mfloat-abi=hard</code></pre><p>and had to disable neon:</p><pre><code>#DEFINES += XN_NEON</code></pre><p>编译成功后，将所需要so动态库放到<code>\usr\local\lib</code>, 通过cmake导入。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2019/10/15/2019/hexo-bo-ke-da-jian/"/>
      <url>/2019/10/15/2019/hexo-bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<p>本来自己已经有一个jekyll博客了，但是偶然看见<a href="https://www.hahack.com/" target="_blank" rel="noopener">这个大佬</a>的笔记wiki，就简直看到了自己想要的。加之其配色代码风格，与自己心目中相符，断然决定另起炉灶，放弃陪伴几个月的博客，就让它消失在岁月尘光中。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>Prepare</li></ul><p>下载nvm，node。注意环境变量。</p><ul><li>Hexo</li></ul><p>安装Hexo，见<a href="https://hexo.io/docs/index.html" target="_blank" rel="noopener">官网</a>. </p><blockquote><p>⚠️这个问题</p><p>Mac / Linux</p><p>If you encounter <code>EACCES</code> permission error when trying to install Hexo, please follow <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">the workaround</a> provided by npmjs; overriding with root/sudo is highly discouraged.</p></blockquote><p>一些github和hexo初始化<a href="https://www.jianshu.com/p/cb0750324e26" target="_blank" rel="noopener">操作</a>。</p><pre class=" language-shell"><code class="language-shell">hexo inithexo install hexo g hexo shexo d #部署到github</code></pre><h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><h2 id="wixo主题"><a href="#wixo主题" class="headerlink" title="wixo主题"></a>wixo主题</h2><p>为了增加wiki的layout，着实花了一番功夫。</p><p>最后其实很简单搞定。</p><ol><li>新建wiki页面</li></ol><p><code>hexo new page wiki</code></p><p>然后你会发现source里面多了个目录about，里面有个index.md。其实你也可以手动建立。页面的格式和文章一样。接着把链接加上,在主题下的<code>_config.yml</code>里面的menu一项，添加wiki</p><ol start="2"><li>复制wixo中的相关代码</li></ol><p><a href="https://github.com/wzpan/hexo-theme-wixo/blob/3d3eeff9dd00f9c589a5da515d70c891bf6ca4fc/layout/_partial/index.ejs" target="_blank" rel="noopener">项目的index代码</a>复制到freemind的layout，改名为wiki。</p><ol start="3"><li>文章在wiki页面显示方式</li></ol><p>原wixo项目所有文章都会显示。为了避免，参考<a href="http://perthcharles.github.io/2015/01/17/how-to-hack-hexo/" target="_blank" rel="noopener">这篇</a>，在wiki.ejs中15行，37行分布添加</p><pre class=" language-ejs"><code class="language-ejs"><% if(cat.name.substring(0, 5) == 'wiki-') { %><% } %></code></pre><h2 id="matery"><a href="#matery" class="headerlink" title="matery"></a>matery</h2><p><a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-19" target="_blank" rel="noopener">主题属性</a></p><p>颜值即是正义。</p><ul><li>插件</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save <span class="token function">npm</span> i -S hexo-prism-plugin<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span class="token function">npm</span> i hexo-permalink-pinyin --save<span class="token function">npm</span> i --save hexo-wordcount<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p>首页显示摘要，next主题的官方就有给出<a href="http://theme-next.iissnan.com/faqs.html#首页显示文章摘录" target="_blank" rel="noopener">三种方法</a>，本文详细介绍的就是其中一种。并附上个人的markdown文章头部模板。</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ol><li>在文章中使用\手动进行截断，Hexo 提供的方式(推荐)</li><li>在文章的 <a href="https://hexo.io/docs/front-matter.html" target="_blank" rel="noopener">front-matter</a> 中添加 description，并提供文章摘录</li><li>自动形成摘要，在主题配置文件中添加，默认截取的长度为 150字符，可以根据需要自行设定：</li></ol><pre><code>auto_excerpt:  enable: true  length: 150</code></pre><h2 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h2><pre><code>---title: git的基本使用date: 2017-01-24categories:- 学习- gittags:  - git---摘要内容......&lt;!-- more --&gt;</code></pre><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p><a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/tag-plugins.html</a></p><ul><li>引用块</li></ul><p>在文章中插入引言，可包含作者、来源和标题。</p><pre><code>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}</code></pre><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="noopener">Welcome to Island Marketing</a></cite></footer></blockquote><ul><li>视频</li></ul><pre><code>{% youtube video_id %}</code></pre><h3 id="Bootstrap-Callout"><a href="#Bootstrap-Callout" class="headerlink" title="Bootstrap Callout"></a>Bootstrap Callout</h3><p>`{% note class_name %} Content (md partial supported) {% endnote %}`其中，class_name 可以是以下列表中的一个值：- default- primary- success- info- warning- danger示例代码：```md{% note primary%}  这是primary 效果{% endnote%}</p>{% note success%}  这是success 效果{% endnote%}```{% note primary%}  这是primary 效果{% endnote%}{% note success%}  这是success 效果{% endnote%}<h1 id="Troubleshoot"><a href="#Troubleshoot" class="headerlink" title="Troubleshoot"></a>Troubleshoot</h1><h2 id="部署后没有样式"><a href="#部署后没有样式" class="headerlink" title="部署后没有样式"></a>部署后没有样式</h2><p>修改config文件，设置url即可</p><pre class=" language-md"><code class="language-md">url: [https://XXX.github.io/XXX.github.io/](https://xxx.github.io/XXX.github.io/)root: /XXX.github.io/permalink: :year/:month/:day/:title/permalink_defaults:</code></pre><h2 id="博客分类标签layout没有内容"><a href="#博客分类标签layout没有内容" class="headerlink" title="博客分类标签layout没有内容"></a>博客分类标签layout没有内容</h2><p><code>hexo new page xxx</code>  </p><p>创建layout页面, categories，tags等。source文件夹下生成index文件。</p><p>需要额外添加，如下：</p><pre class=" language-md"><code class="language-md">title: tagsdate: 2019-11-02 15:42:36type: "tags" layout: "tags"</code></pre><h2 id="hexo中插入数学公式"><a href="#hexo中插入数学公式" class="headerlink" title="hexo中插入数学公式"></a>hexo中插入数学公式</h2><pre><code>$ npm install hexo-math --save</code></pre><p>在站点配置文件 <em>_config.yml</em> 中添加：</p><pre><code>math:  engine: &#39;mathjax&#39; # or &#39;katex&#39;  mathjax:    # src: custom_mathjax_source    config:      # MathJax config</code></pre><p>在 next 主题配置文件中 <em>themes/next-theme/_config.yml</em> 中将 mathJax 设为 true:</p><pre><code># MathJax Supportmathjax:  enable: true  per_page: false  cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</code></pre><p><a href="http://stevenshi.me/2017/06/26/hexo-insert-formula/" target="_blank" rel="noopener">http://stevenshi.me/2017/06/26/hexo-insert-formula/</a></p><h2 id="wixo-中支持-Mathjax"><a href="#wixo-中支持-Mathjax" class="headerlink" title="wixo 中支持 Mathjax"></a>wixo 中支持 Mathjax</h2><p>在 hexo 中，你会发现我们不能用 <code>Latex</code> 语法来书写数学公式，这对于书写学术博客来说是很大的不便，因为我们会经常碰到很多的数学公式推导，但是我们可以通过安装第三方库来解决这一问题。</p><p> 第一步： 使用Kramed代替 Marked</p><p><code>hexo</code> 默认的渲染引擎是 <code>marked</code>，但是 <code>marked</code> 不支持 <code>mathjax</code>。 <code>kramed</code> 是在 <code>marked</code> 的基础上进行修改。我们在工程目录下执行以下命令来安装 <code>kramed</code>.</p><pre><code>npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save</code></pre><p>然后，更改/node_modules/hexo-renderer-kramed/lib/renderer.js，更改：</p><pre><code>// Change inline math rulefunction formatText(text) {    // Fit kramed&#39;s rule: $$ + \1 + $$    return text.replace(/`\$(.*?)\$`/g, &#39;$$$$$1$$$$&#39;);}</code></pre><p>为：</p><pre><code>// Change inline math rulefunction formatText(text) {    return text;}</code></pre><p>第二步: 停止使用 hexo-math</p><p>首先，如果你已经安装 <code>hexo-math</code>, 请卸载它：</p><pre><code>npm uninstall hexo-math --save</code></pre><p>然后安装 <a href="https://github.com/phoenixcw/hexo-renderer-mathjax" target="_blank" rel="noopener">hexo-renderer-mathjax</a> 包：</p><pre><code>npm install hexo-renderer-mathjax --save</code></pre><p> 第三步: 更新 Mathjax 的 CDN 链接</p><p>首先，打开/node_modules/hexo-renderer-mathjax/mathjax.html</p><p>然后，把``更改为：</p><pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;&lt;/script&gt;</code></pre><p>第四步: 更改默认转义规则</p><p>因为 <code>hexo</code> 默认的转义规则会将一些字符进行转义，比如 <code>_</code> 转为 ``, 所以我们需要对默认的规则进行修改.<br>首先， 打开&lt;path-to-your-project/node_modules/kramed/lib/rules、inline.js,</p><p>然后，把:</p><pre><code>escape: /^\\([\\`*{}\[\]()#$+\-.!_&gt;])/,</code></pre><p>更改为:</p><pre><code>escape: /^\\([`*\[\]()# +\-.!_&gt;])/,</code></pre><p>把</p><pre><code>em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</code></pre><p>更改为:</p><pre><code>em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</code></pre><p>第五步: 开启mathjax</p><p>在主题 <code>_config.yml</code> 中开启 Mathjax， 找到 <code>mathjax</code> 字段添加如下代码：</p><pre><code>mathjax:    enable: true</code></pre><p>这一步可选，在博客中开启 <code>Mathjax</code>，， 添加以下内容：</p><pre><code>---title: Testing Mathjax with Hexocategory: Uncategorizeddate: 2017/05/03mathjax: true---</code></pre><p>通过以上步骤，我们就可以在 <code>hexo</code> 中使用 <code>Mathjax</code> 来书写数学公式。</p><h1 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h1><p><a href="https://pengloo53.gitbooks.io/hexo/content/" target="_blank" rel="noopener">https://pengloo53.gitbooks.io/hexo/content/</a></p><h2 id="插入音视频"><a href="#插入音视频" class="headerlink" title="插入音视频"></a>插入音视频</h2>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用谷歌API训练自己检测器</title>
      <link href="/2019/07/03/2019/2019-07-2-shi-yong-gu-ge-api-xun-lian-zi-ji-jian-ce-qi/"/>
      <url>/2019/07/03/2019/2019-07-2-shi-yong-gu-ge-api-xun-lian-zi-ji-jian-ce-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="使用谷歌API训练自己检测器"><a href="#使用谷歌API训练自己检测器" class="headerlink" title="使用谷歌API训练自己检测器"></a>使用谷歌API训练自己检测器</h1><h1 id="0-快速开始"><a href="#0-快速开始" class="headerlink" title="0. 快速开始"></a>0. 快速开始</h1><p>Setup:</p><ul><li><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md" target="_blank" rel="noopener">Installation</a></li></ul><p>Quick Start:</p><ul><li><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/object_detection_tutorial.ipynb" target="_blank" rel="noopener">Quick Start: Jupyter notebook for off-the-shelf inference</a></li><li><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_pets.md" target="_blank" rel="noopener">Quick Start: Training a pet detector</a></li></ul><p>推荐文件夹格式：</p><p>annotations — 标注xml文件</p><p>data — 转化后tf record文件</p><p>images — 原数据集</p><p>training  — 训练模型以及配置文件</p><h1 id="1-制作图像数据集"><a href="#1-制作图像数据集" class="headerlink" title="1. 制作图像数据集"></a>1. 制作图像数据集</h1><h2 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h2><p> <a href="https://images.google.com/" target="_blank" rel="noopener">Google Images</a> and <a href="https://pixabay.com/" target="_blank" rel="noopener">Pixabay</a> </p><ul><li><p>jpeg or png</p></li><li><p>bounding boxes (<code>xmin, ymin, xmax, ymax</code>) </p></li></ul><h2 id="数据标注工具"><a href="#数据标注工具" class="headerlink" title="数据标注工具"></a>数据标注工具</h2><p>几种格式：PASCAL VOC format， COCO</p><ul><li><p><a href="http://www.robots.ox.ac.uk/~vgg/software/via/" target="_blank" rel="noopener">VIA (VGG Image Annotator)</a></p><blockquote><p>because of its simplicity. It’s a single HTML file that you download and open in a browser. </p></blockquote></li><li><p><a href="https://github.com/tzutalin/labelImg" target="_blank" rel="noopener">LabelImg</a></p><blockquote><p>saved as XML files in the PASCAL VOC format </p></blockquote></li></ul><p><a href="https://gist.github.com/seaside2mm/5b3ee02404f46601f43ff012f679d7bb" target="_blank" rel="noopener">XML 转换 CSV格式</a></p><ul><li><a href="https://github.com/christopher5106/FastAnnotationTool" target="_blank" rel="noopener">FIAT (Fast Image Data Annotation Tool)</a></li></ul><h2 id="csv数据集划分"><a href="#csv数据集划分" class="headerlink" title="csv数据集划分"></a>csv数据集划分</h2><p><a href="https://gist.github.com/seaside2mm/8cd6c846936a441489bc310d69b1d42a" target="_blank" rel="noopener">划分训练和测试</a></p><h2 id="TFRecord数据格式"><a href="#TFRecord数据格式" class="headerlink" title="TFRecord数据格式"></a>TFRecord数据格式</h2><p>生成方法：</p><p> <a href="http://host.robots.ox.ac.uk/pascal/VOC/" target="_blank" rel="noopener">PASCAL VOC dataset</a> </p><p><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/dataset_tools/create_pascal_tf_record.py" target="_blank" rel="noopener">create_pascal_tf_record.py</a></p><p>图像格式转换</p><p> <a href="http://imagemagick.org/#" target="_blank" rel="noopener">ImageMagick</a></p><h1 id="2-训练模型"><a href="#2-训练模型" class="headerlink" title="2. 训练模型"></a>2. 训练模型</h1><p>利用 <a href="https://research.googleblog.com/2017/06/supercharge-your-computer-vision-models.html" target="_blank" rel="noopener">TensorFlow’s new Object Detector API</a>进行模型训练。</p><h2 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h2><ul><li><p>选择具体NN模型更改 <a href="https://github.com/tensorflow/models/tree/master/research/object_detection/samples/configs" target="_blank" rel="noopener">config files</a></p><p><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/configuring_jobs.md" target="_blank" rel="noopener">object detection training pipeline</a>. </p></li></ul><pre><code>tf_record_input_reader {  input_path: &quot;/usr/home/username/data/train.record&quot;}label_map_path: &quot;/usr/home/username/data/label_map.pbtxt&quot;</code></pre><ul><li><p>label map</p><p><a href="https://github.com/tensorflow/models/tree/master/research/object_detection/data" target="_blank" rel="noopener">选择相对应label map</a>. 比如，只有一个label时：</p></li></ul><pre><code>item {  id: 1  name: &#39;person&#39;}</code></pre><h2 id="Pre-trained-model-checkpoint"><a href="#Pre-trained-model-checkpoint" class="headerlink" title="Pre-trained model checkpoint"></a>Pre-trained model checkpoint</h2><p>选择已经训练好的模型进行模型迁移，减少计算量。可选择项。 <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md" target="_blank" rel="noopener">several model checkpoint</a> </p><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><ul><li>Training can be either done <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_locally.md" target="_blank" rel="noopener">locally</a> or on the <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_on_cloud.md" target="_blank" rel="noopener">cloud</a> (AWS, Google Cloud etc.). If you have GPU (at least more than 2 GB) at home then you can do it locally otherwise I would recommend to go with the cloud. In my case, I went with <a href="http://cloud.google.com/" target="_blank" rel="noopener">Google Cloud</a> this time and essentially followed all the steps described in <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_on_cloud.md" target="_blank" rel="noopener">their documentation</a>.</li><li>For Google Cloud, you need to define a YAML configuration file. A <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/samples/cloud/cloud.yml" target="_blank" rel="noopener">sample file is also provided</a> and I basically just took the default values.</li><li>It is also recommended during the training to start the evaluation job. You can then monitor the process of the training and evaluation jobs by running <a href="https://www.tensorflow.org/get_started/summaries_and_tensorboard" target="_blank" rel="noopener">Tensorboard</a> on your local machine.</li></ul><h1 id="3-导出模型"><a href="#3-导出模型" class="headerlink" title="3. 导出模型"></a>3. 导出模型</h1><p>copy the model checkpoints from the Google Cloud bucket to my local machine and then used the <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/exporting_models.md" target="_blank" rel="noopener">provided script</a> to export the model.</p><p>After export, you should see the directory ${EXPORT_DIR} containing the following:</p><ul><li>saved_model/, a directory containing the saved model format of the exported model</li><li>frozen_inference_graph.pb, the frozen graph format of the exported model</li><li>model.ckpt.*, the model checkpoints used for exporting</li><li>checkpoint, a file specifying to restore included checkpoint files</li><li>pipeline.config, pipeline config file for the exported model</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/tensorflow/models/tree/master/research/object_detection" target="_blank" rel="noopener">https://github.com/tensorflow/models/tree/master/research/object_detection</a></p><p><a href="https://towardsdatascience.com/how-to-train-your-own-object-detector-with-tensorflows-object-detector-api-bec72ecfe1d9" target="_blank" rel="noopener">https://towardsdatascience.com/how-to-train-your-own-object-detector-with-tensorflows-object-detector-api-bec72ecfe1d9</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用谷歌API训练自己检测器</title>
      <link href="/2019/07/03/2020/mo-ban/"/>
      <url>/2019/07/03/2020/mo-ban/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机科学自学指南</title>
      <link href="/2017/10/01/2019/ji-suan-ji-ke-xue-zi-xue-zhi-nan/"/>
      <url>/2017/10/01/2019/ji-suan-ji-ke-xue-zi-xue-zhi-nan/</url>
      
        <content type="html"><![CDATA[<p><a href="http://cslearner.cn/" target="_blank" rel="noopener">路线参考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
